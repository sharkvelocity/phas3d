{"version":3,"file":"babylonjs.addons.min.js","mappings":"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","sources":["webpack://ADDONS/webpack/universalModuleDefinition","webpack://ADDONS/../../../dev/addons/src/msdfText/shaders/msdf.vertex.ts","webpack://ADDONS/../../../dev/addons/src/msdfText/shadersWGSL/msdf.fragment.ts","webpack://ADDONS/../../../dev/addons/src/msdfText/shaders/msdf.fragment.ts","webpack://ADDONS/external umd {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}","webpack://ADDONS/../../../dev/addons/src/msdfText/shadersWGSL/msdf.vertex.ts","webpack://ADDONS/webpack/bootstrap","webpack://ADDONS/webpack/runtime/compat get default export","webpack://ADDONS/webpack/runtime/define property getters","webpack://ADDONS/webpack/runtime/hasOwnProperty shorthand","webpack://ADDONS/webpack/runtime/make namespace object","webpack://ADDONS/../../../dev/addons/src/htmlMesh/htmlMeshRenderer.ts","webpack://ADDONS/../../../../node_modules/tslib/tslib.es6.mjs","webpack://ADDONS/../../../dev/addons/src/htmlMesh/pointerEventsCapture.ts","webpack://ADDONS/../../../dev/addons/src/msdfText/fontAsset.ts","webpack://ADDONS/../../../dev/addons/src/htmlMesh/pointerEventsCaptureBehavior.ts","webpack://ADDONS/../../../dev/addons/src/htmlMesh/fitStrategy.ts","webpack://ADDONS/../../../dev/addons/src/htmlMesh/htmlMesh.ts","webpack://ADDONS/../../../dev/addons/src/msdfText/paragraphOptions.ts","webpack://ADDONS/../../../dev/addons/src/msdfText/sdf/paragraph.ts","webpack://ADDONS/../../../dev/addons/src/msdfText/textRenderer.ts","webpack://ADDONS/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-addons\", [\"babylonjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-addons\"] = factory(require(\"babylonjs\"));\n\telse\n\t\troot[\"ADDONS\"] = factory(root[\"BABYLON\"]);\n})((typeof self !== \"undefined\" ? self : typeof global !== \"undefined\" ? global : this), (__WEBPACK_EXTERNAL_MODULE__597__) => {\nreturn ","// Do not edit.\nimport { ShaderStore } from \"core/Engines/shaderStore\";\n\nconst name = \"msdfVertexShader\";\nconst shader = `#define BILLBOARD 1\n#define BILLBOARDSCREENPROJECTED 2\nattribute vec2 offsets;attribute vec4 world0;attribute vec4 world1;attribute vec4 world2;attribute vec4 world3;attribute vec4 uvs;uniform mat4 transform;uniform mat4 parentWorld;uniform mat4 view;uniform mat4 projection;uniform vec3 center;uniform int mode;varying vec2 atlasUV;void main(void) {mat4 world=mat4(world0,world1,world2,world3);vec4 worldPos=transform*(world*vec4(offsets.xy-vec2(0.5,0.5),0.,1.0));if (mode>=BILLBOARD) {vec3 viewPos=(view*parentWorld*vec4(0.,0.,0.,1.0)).xyz; \nif (mode==BILLBOARDSCREENPROJECTED) {viewPos.x/=viewPos.z;viewPos.y/=viewPos.z;viewPos.z=1.0;}\ngl_Position=projection*vec4(viewPos+worldPos.xyz,1.0); } else {vec3 viewPos=(view*parentWorld*worldPos).xyz; \ngl_Position=projection*vec4(viewPos,1.0); }\natlasUV=vec2(uvs.x+offsets.x*uvs.z,uvs.y+(1.0-offsets.y)*uvs.w);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const msdfVertexShader = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"core/Engines/shaderStore\";\n\nconst name = \"msdfPixelShader\";\nconst shader = `var fontAtlas: texture_2d<f32>;var fontAtlasSampler: sampler;uniform uColor: vec4f;uniform thickness: f32;uniform uStrokeColor: vec4f;uniform uStrokeInsetWidth: f32;uniform uStrokeOutsetWidth: f32;varying atlasUV: vec2f;fn median(msdf: vec3<f32>)->f32 {let a=min(msdf.r,msdf.g);let b=max(msdf.r,msdf.g);return max(a,min(b,msdf.b));}\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {let s=textureSample(fontAtlas,fontAtlasSampler,input.atlasUV).rgb;let sigDist=median(s)-0.5+uniforms.thickness;let afwidth=length(vec2<f32>(dpdx(sigDist),dpdy(sigDist)));let alpha=clamp(sigDist/afwidth+0.5,0.0,1.0);let sigDistOutset=sigDist+uniforms.uStrokeOutsetWidth*0.5;let sigDistInset=sigDist-uniforms.uStrokeInsetWidth*0.5;let afwidthOutset=length(vec2<f32>(dpdx(sigDistOutset),dpdy(sigDistOutset)));let afwidthInset=length(vec2<f32>(dpdx(sigDistInset),dpdy(sigDistInset)));let outset=clamp(sigDistOutset/afwidthOutset+0.5,0.0,1.0);let inset=1.0-clamp(sigDistInset/afwidthInset+0.5,0.0,1.0);let border=outset*inset;let filledFragColor=vec4<f32>(uniforms.uColor.rgb,alpha*uniforms.uColor.a);let strokedFragColor=vec4<f32>(uniforms.uStrokeColor.rgb,border*uniforms.uStrokeColor.a);fragmentOutputs.color=mix(filledFragColor,strokedFragColor,border);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const msdfPixelShaderWGSL = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"core/Engines/shaderStore\";\n\nconst name = \"msdfPixelShader\";\nconst shader = `#extension GL_OES_standard_derivatives : enable\nprecision highp float;uniform sampler2D fontAtlas;uniform vec4 uColor;uniform vec4 uStrokeColor;uniform float uStrokeInsetWidth;uniform float uStrokeOutsetWidth;uniform float thickness;varying vec2 atlasUV;float median(vec3 msdf) {return max(min(msdf.r,msdf.g),min(max(msdf.r,msdf.g),msdf.b));}\nvoid main(void)\n{vec3 s=texture2D(fontAtlas,atlasUV).rgb;float sigDist=median(s)-0.5+thickness;float alpha=clamp(sigDist/fwidth(sigDist)+0.5,0.0,1.0);float sigDistOutset=sigDist+uStrokeOutsetWidth*0.5;float sigDistInset=sigDist-uStrokeInsetWidth*0.5;float outset=clamp(sigDistOutset/fwidth(sigDistOutset)+0.5,0.0,1.0);float inset=1.0-clamp(sigDistInset/fwidth(sigDistInset)+0.5,0.0,1.0);float border=outset*inset;vec4 filledFragColor=vec4(uColor.rgb,alpha*uColor.a);vec4 strokedFragColor=vec4(uStrokeColor.rgb,border*uStrokeColor.a);gl_FragColor=mix(filledFragColor,strokedFragColor,border);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const msdfPixelShader = { name, shader };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__597__;","// Do not edit.\nimport { ShaderStore } from \"core/Engines/shaderStore\";\n\nconst name = \"msdfVertexShader\";\nconst shader = `#define BILLBOARD 1\n#define BILLBOARDSCREENPROJECTED 2\nattribute offsets: vec2f;attribute world0: vec4f;attribute world1: vec4f;attribute world2: vec4f;attribute world3: vec4f;attribute uvs: vec4f;uniform transform: mat4x4f;uniform parentWorld: mat4x4f;uniform view: mat4x4f;uniform projection: mat4x4f;uniform mode: u32;varying atlasUV: vec2f;@vertex\nfn main(input: VertexInputs)->FragmentInputs {let world=mat4x4<f32>(input.world0,input.world1,input.world2,input.world3);let localOffset=vec4<f32>(input.offsets-vec2<f32>(0.5,0.5),0.0,1.0);let worldPos=uniforms.transform*world*localOffset;if (uniforms.mode>=BILLBOARD) { \nvar viewPos=(uniforms.view*uniforms.parentWorld*vec4f(0.,0.,0.,1.0)).xyz;if (uniforms.mode==BILLBOARDSCREENPROJECTED) {viewPos=vec3f(viewPos.x/viewPos.z,viewPos.y/viewPos.z,1.0);} \nvertexOutputs.position=uniforms.projection*vec4<f32>(viewPos+worldPos.xyz,1.0);} else { \nlet viewPos=(uniforms.view*uniforms.parentWorld*worldPos).xyz;vertexOutputs.position=uniforms.projection*vec4<f32>(viewPos,1.0);}\nvertexOutputs.atlasUV=vec2<f32>(\ninput.uvs.x+input.offsets.x*input.uvs.z,\ninput.uvs.y+(1.0-input.offsets.y)*input.uvs.w\n);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const msdfVertexShaderWGSL = { name, shader };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { Scene } from \"core/scene\";\r\nimport { Matrix, Quaternion, Vector3 } from \"core/Maths/math\";\r\n\r\nimport type { HtmlMesh } from \"./htmlMesh\";\r\nimport { Camera } from \"core/Cameras/camera\";\r\nimport type { SubMesh } from \"core/Meshes/subMesh\";\r\nimport { RenderingGroup } from \"core/Rendering/renderingGroup\";\r\n\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport { Logger } from \"core/Misc/logger\";\r\nimport type { AbstractEngine } from \"core/Engines\";\r\nimport { TransformNode } from \"core/Meshes/transformNode\";\r\n\r\nconst PositionUpdateFailMessage = \"Failed to update html mesh renderer position due to failure to get canvas rect.  HtmlMesh instances may not render correctly\";\r\nconst BabylonUnitsToPixels = 100;\r\n\r\n/**\r\n * A function that compares two submeshes and returns a number indicating which\r\n * should be rendered first.\r\n */\r\ntype RenderOrderFunction = (subMeshA: SubMesh, subMeshB: SubMesh) => number;\r\n\r\ntype RenderLayerElements = {\r\n    container: HTMLElement;\r\n    domElement: HTMLElement;\r\n    cameraElement: HTMLElement;\r\n};\r\n\r\n// Returns a function that ensures that HtmlMeshes are rendered before all other meshes.\r\n// Note this will only be applied to group 0.\r\n// If neither mesh is an HtmlMesh, then the default render order is used\r\n// This prevents HtmlMeshes from appearing in front of other meshes when they are behind them\r\nconst RenderOrderFunc = (defaultRenderOrder: RenderOrderFunction): RenderOrderFunction => {\r\n    return (subMeshA: SubMesh, subMeshB: SubMesh) => {\r\n        const meshA = subMeshA.getMesh();\r\n        const meshB = subMeshB.getMesh();\r\n\r\n        // Use property check instead of instanceof since it is less expensive and\r\n        // this will be called many times per frame\r\n        const meshIsHtmlMeshA = (meshA as any)[\"isHtmlMesh\"];\r\n        const meshIsHtmlMeshB = (meshB as any)[\"isHtmlMesh\"];\r\n        if (meshIsHtmlMeshA) {\r\n            return meshIsHtmlMeshB ? (meshA.absolutePosition.z <= meshB.absolutePosition.z ? 1 : -1) : -1;\r\n        } else {\r\n            return meshIsHtmlMeshB ? 1 : defaultRenderOrder(subMeshA, subMeshB);\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * An instance of this is required to render HtmlMeshes in the scene.\r\n * if using HtmlMeshes, you must not set render order for group 0 using\r\n * scene.setRenderingOrder.  You must instead pass the compare functions\r\n * to the HtmlMeshRenderer constructor.  If you do not, then your render\r\n * order will be overwritten if the HtmlMeshRenderer is created after and\r\n * the HtmlMeshes will not render correctly (they will appear in front of\r\n * meshes that are actually in front of them) if the HtmlMeshRenderer is\r\n * created before.\r\n */\r\nexport class HtmlMeshRenderer {\r\n    private _containerId?: string;\r\n    private _inSceneElements?: RenderLayerElements | null;\r\n    private _overlayElements?: RenderLayerElements | null;\r\n    private _engine: AbstractEngine;\r\n\r\n    private _cache = {\r\n        cameraData: { fov: 0, position: new Vector3(), style: \"\" },\r\n        htmlMeshData: new WeakMap<object, { style: string }>(),\r\n    };\r\n    private _width = 0;\r\n    private _height = 0;\r\n    private _heightHalf = 0;\r\n\r\n    private _cameraWorldMatrix?: Matrix;\r\n\r\n    // Create some refs to avoid creating new objects every frame\r\n    private _temp = {\r\n        scaleTransform: new Vector3(),\r\n        rotationTransform: new Quaternion(),\r\n        positionTransform: new Vector3(),\r\n        objectMatrix: Matrix.Identity(),\r\n        cameraWorldMatrix: Matrix.Identity(),\r\n        cameraRotationMatrix: Matrix.Identity(),\r\n        cameraWorldMatrixAsArray: new Array(16),\r\n    };\r\n\r\n    // Keep track of DPR so we can resize if DPR changes\r\n    // Otherwise the DOM content will scale, but the mesh won't\r\n    private _lastDevicePixelRatio = window.devicePixelRatio;\r\n\r\n    // Keep track of camera matrix changes so we only update the\r\n    // DOM element styles when necessary\r\n    private _cameraMatrixUpdated = true;\r\n\r\n    // Keep track of position changes so we only update the DOM element\r\n    // styles when necessary\r\n    private _previousCanvasDocumentPosition = {\r\n        top: 0,\r\n        left: 0,\r\n    };\r\n\r\n    private _renderObserver: Observer<Scene> | null = null;\r\n\r\n    /**\r\n     * Contruct an instance of HtmlMeshRenderer\r\n     * @param scene\r\n     * @param options object containing the following optional properties:\r\n     * @returns\r\n     */\r\n    constructor(\r\n        scene: Scene,\r\n        {\r\n            parentContainerId = null,\r\n            _containerId = \"css-container\",\r\n            enableOverlayRender = true,\r\n            defaultOpaqueRenderOrder = RenderingGroup.PainterSortCompare,\r\n            defaultAlphaTestRenderOrder = RenderingGroup.PainterSortCompare,\r\n            defaultTransparentRenderOrder = RenderingGroup.defaultTransparentSortCompare,\r\n        }: {\r\n            parentContainerId?: string | null;\r\n            _containerId?: string;\r\n            defaultOpaqueRenderOrder?: RenderOrderFunction;\r\n            defaultAlphaTestRenderOrder?: RenderOrderFunction;\r\n            defaultTransparentRenderOrder?: RenderOrderFunction;\r\n            enableOverlayRender?: boolean;\r\n        } = {}\r\n    ) {\r\n        // Requires a browser to work.  Only init if we are in a browser\r\n        if (typeof document === \"undefined\") {\r\n            return;\r\n        }\r\n        this._containerId = _containerId;\r\n        this._init(scene, parentContainerId, enableOverlayRender, defaultOpaqueRenderOrder, defaultAlphaTestRenderOrder, defaultTransparentRenderOrder);\r\n    }\r\n\r\n    /**\r\n     * Dispose of the HtmlMeshRenderer\r\n     */\r\n    public dispose() {\r\n        if (this._renderObserver) {\r\n            this._renderObserver.remove();\r\n            this._renderObserver = null;\r\n        }\r\n\r\n        this._overlayElements?.container.remove();\r\n        this._overlayElements = null;\r\n\r\n        this._inSceneElements?.container.remove();\r\n        this._inSceneElements = null;\r\n    }\r\n\r\n    protected _init(\r\n        scene: Scene,\r\n        parentContainerId: string | null,\r\n        enableOverlayRender: boolean,\r\n        defaultOpaqueRenderOrder: RenderOrderFunction,\r\n        defaultAlphaTestRenderOrder: RenderOrderFunction,\r\n        defaultTransparentRenderOrder: RenderOrderFunction\r\n    ): void {\r\n        // Requires a browser to work.  Only init if we are in a browser\r\n        if (typeof document === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        // Create the DOM containers\r\n        let parentContainer = parentContainerId ? document.getElementById(parentContainerId) : document.body;\r\n\r\n        if (!parentContainer) {\r\n            parentContainer = document.body;\r\n        }\r\n\r\n        // if the container already exists, then remove it\r\n        const inSceneContainerId = `${this._containerId}_in_scene`;\r\n        this._inSceneElements = this._createRenderLayerElements(inSceneContainerId);\r\n\r\n        parentContainer.insertBefore(this._inSceneElements.container, parentContainer.firstChild);\r\n\r\n        if (enableOverlayRender) {\r\n            const overlayContainerId = `${this._containerId}_overlay`;\r\n            this._overlayElements = this._createRenderLayerElements(overlayContainerId);\r\n            const zIndex = +(scene.getEngine().getRenderingCanvas()!.style.zIndex ?? \"0\") + 1;\r\n            this._overlayElements.container.style.zIndex = `${zIndex}`;\r\n            this._overlayElements.container.style.pointerEvents = \"none\";\r\n            parentContainer.insertBefore(this._overlayElements.container, parentContainer.firstChild);\r\n        }\r\n        this._engine = scene.getEngine();\r\n        const clientRect = this._engine.getRenderingCanvasClientRect();\r\n        if (!clientRect) {\r\n            throw new Error(\"Failed to get client rect for rendering canvas\");\r\n        }\r\n\r\n        // Set the size and resize behavior\r\n        this._setSize(clientRect.width, clientRect.height);\r\n\r\n        this._engine.onResizeObservable.add(() => {\r\n            const clientRect = this._engine.getRenderingCanvasClientRect();\r\n            if (clientRect) {\r\n                this._setSize(clientRect.width, clientRect.height);\r\n            }\r\n        });\r\n\r\n        let projectionObs: Observer<Camera>;\r\n        let matrixObs: Observer<Camera>;\r\n\r\n        const observeCamera = () => {\r\n            const camera = scene.activeCamera;\r\n            if (camera) {\r\n                projectionObs = camera.onProjectionMatrixChangedObservable.add(() => {\r\n                    this._onCameraMatrixChanged(camera);\r\n                });\r\n                matrixObs = camera.onViewMatrixChangedObservable.add(() => {\r\n                    this._onCameraMatrixChanged(camera);\r\n                });\r\n            }\r\n        };\r\n\r\n        observeCamera();\r\n\r\n        scene.onActiveCameraChanged.add(() => {\r\n            if (projectionObs) {\r\n                scene.activeCamera?.onProjectionMatrixChangedObservable.remove(projectionObs);\r\n            }\r\n            if (matrixObs) {\r\n                scene.activeCamera?.onViewMatrixChangedObservable.remove(matrixObs);\r\n            }\r\n            observeCamera();\r\n        });\r\n\r\n        // We need to make sure that HtmlMeshes are rendered before all other meshes\r\n        // so that they don't appear in front of meshes that are actually in front of them\r\n        // Updating the render order isn't ideal, but it is the only way to acheive this\r\n        // The implication is that an app using the HtmlMeshRendered must set the scene render order\r\n        // via the HtmlMeshRendered constructor\r\n        const opaqueRenderOrder = RenderOrderFunc(defaultOpaqueRenderOrder);\r\n        const alphaTestRenderOrder = RenderOrderFunc(defaultAlphaTestRenderOrder);\r\n        const transparentRenderOrder = RenderOrderFunc(defaultTransparentRenderOrder);\r\n        scene.setRenderingOrder(0, opaqueRenderOrder, alphaTestRenderOrder, transparentRenderOrder);\r\n\r\n        this._renderObserver = scene.onBeforeRenderObservable.add(() => {\r\n            this._render(scene, scene.activeCamera as Camera);\r\n        });\r\n    }\r\n\r\n    private _createRenderLayerElements(containerId: string): RenderLayerElements {\r\n        const existingContainer = document.getElementById(containerId);\r\n        if (existingContainer) {\r\n            existingContainer.remove();\r\n        }\r\n        const container = document.createElement(\"div\");\r\n        container.id = containerId;\r\n        container.style.position = \"absolute\";\r\n        container.style.width = \"100%\";\r\n        container.style.height = \"100%\";\r\n        container.style.zIndex = \"-1\";\r\n\r\n        const domElement = document.createElement(\"div\");\r\n        domElement.style.overflow = \"hidden\";\r\n\r\n        const cameraElement = document.createElement(\"div\");\r\n\r\n        cameraElement.style.webkitTransformStyle = \"preserve-3d\";\r\n        cameraElement.style.transformStyle = \"preserve-3d\";\r\n\r\n        cameraElement.style.pointerEvents = \"none\";\r\n\r\n        domElement.appendChild(cameraElement);\r\n        container.appendChild(domElement);\r\n        return {\r\n            container,\r\n            domElement,\r\n            cameraElement,\r\n        };\r\n    }\r\n\r\n    protected _getSize(): { width: number; height: number } {\r\n        return {\r\n            width: this._width,\r\n            height: this._height,\r\n        };\r\n    }\r\n\r\n    protected _setSize(width: number, height: number): void {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._heightHalf = this._height / 2;\r\n\r\n        if (!this._inSceneElements || !this._overlayElements) {\r\n            return;\r\n        }\r\n\r\n        const domElements = [this._inSceneElements.domElement, this._overlayElements.domElement, this._inSceneElements.cameraElement, this._overlayElements.cameraElement];\r\n        for (const dom of domElements) {\r\n            if (dom) {\r\n                dom.style.width = `${width}px`;\r\n                dom.style.height = `${height}px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    // prettier-ignore\r\n    protected _getCameraCssMatrix(matrix: Matrix): string {\r\n        const elements = matrix.m;\r\n        return `matrix3d(${\r\n            this._epsilon( elements[0] )\r\n        },${\r\n            this._epsilon( - elements[1] )\r\n        },${\r\n            this._epsilon( elements[2] )\r\n        },${\r\n            this._epsilon( elements[3] )\r\n        },${\r\n            this._epsilon( elements[4] )\r\n        },${\r\n            this._epsilon( - elements[5] )\r\n        },${\r\n            this._epsilon( elements[6] )\r\n        },${\r\n            this._epsilon( elements[7] )\r\n        },${\r\n            this._epsilon( elements[8] )\r\n        },${\r\n            this._epsilon( - elements[9] )\r\n        },${\r\n            this._epsilon( elements[10] )\r\n        },${\r\n            this._epsilon( elements[11] )\r\n        },${\r\n            this._epsilon( elements[12] )\r\n        },${\r\n            this._epsilon( - elements[13] )\r\n        },${\r\n            this._epsilon( elements[14] )\r\n        },${\r\n            this._epsilon( elements[15] )\r\n        })`;\r\n    }\r\n\r\n    // Convert a Babylon world matrix to a CSS matrix\r\n    // This also handles conversion from BJS left handed coords\r\n    // to CSS right handed coords\r\n    // prettier-ignore\r\n    protected _getHtmlContentCssMatrix(matrix: Matrix, useRightHandedSystem: boolean): string {\r\n        const elements = matrix.m;\r\n        // In a right handed coordinate system, the elements 11 to 14 have to change their direction\r\n        const direction = useRightHandedSystem ? -1 : 1;\r\n        const matrix3d = `matrix3d(${\r\n            this._epsilon( elements[0] )\r\n        },${\r\n            this._epsilon( elements[1] )\r\n        },${\r\n            this._epsilon( elements[2] * -direction )\r\n        },${\r\n            this._epsilon( elements[3] )\r\n        },${\r\n            this._epsilon( - elements[4] )\r\n        },${\r\n            this._epsilon( - elements[5] )\r\n        },${\r\n            this._epsilon( elements[6]  * direction )\r\n        },${\r\n            this._epsilon( - elements[7] )\r\n        },${\r\n            this._epsilon( elements[8] * -direction )\r\n        },${\r\n            this._epsilon( elements[9] * -direction )\r\n        },${\r\n            this._epsilon( elements[10] )\r\n        },${\r\n            this._epsilon( elements[11] * direction )\r\n        },${\r\n            this._epsilon( elements[12] * direction )\r\n        },${\r\n            this._epsilon( elements[13] * direction )\r\n        },${\r\n            this._epsilon( elements[14] * direction )\r\n        },${\r\n            this._epsilon( elements[15] )\r\n        })`;\r\n        return matrix3d;\r\n    }\r\n\r\n    protected _getTransformationMatrix(htmlMesh: HtmlMesh, useRightHandedSystem: boolean): Matrix {\r\n        // Get the camera world matrix\r\n        // Make sure the camera world matrix is up to date\r\n        if (!this._cameraWorldMatrix) {\r\n            this._cameraWorldMatrix = htmlMesh.getScene().activeCamera?.getWorldMatrix();\r\n        }\r\n        if (!this._cameraWorldMatrix) {\r\n            return Matrix.Identity();\r\n        }\r\n\r\n        const objectWorldMatrix = htmlMesh.getWorldMatrix();\r\n\r\n        // Scale the object matrix by the base scale factor for the mesh\r\n        // which is the ratio of the mesh width/height to the renderer\r\n        // width/height divided by the babylon units to pixels ratio\r\n        let widthScaleFactor = 1;\r\n        let heightScaleFactor = 1;\r\n        if (htmlMesh.sourceWidth && htmlMesh.sourceHeight) {\r\n            widthScaleFactor = htmlMesh.width! / (htmlMesh.sourceWidth / BabylonUnitsToPixels);\r\n            heightScaleFactor = htmlMesh.height! / (htmlMesh.sourceHeight / BabylonUnitsToPixels);\r\n        }\r\n\r\n        // Apply the scale to the object's world matrix.  Note we aren't scaling\r\n        // the object, just getting a matrix as though it were scaled, so we can\r\n        // scale the content\r\n        const scaleTransform = this._temp.scaleTransform;\r\n        const rotationTransform = this._temp.rotationTransform;\r\n        const positionTransform = this._temp.positionTransform;\r\n        const scaledAndTranslatedObjectMatrix = this._temp.objectMatrix;\r\n\r\n        objectWorldMatrix.decompose(scaleTransform, rotationTransform, positionTransform);\r\n        scaleTransform.x *= widthScaleFactor;\r\n        scaleTransform.y *= heightScaleFactor;\r\n\r\n        Matrix.ComposeToRef(scaleTransform, rotationTransform, positionTransform, scaledAndTranslatedObjectMatrix);\r\n\r\n        // Adjust direction of 12 and 13 of the transformation matrix based on the handedness of the system\r\n        const direction = useRightHandedSystem ? -1 : 1;\r\n        // Adjust translation values to be from camera vs world origin\r\n        // Note that we are also adjusting these values to be pixels vs Babylon units\r\n        const position = htmlMesh.getAbsolutePosition();\r\n        scaledAndTranslatedObjectMatrix.setRowFromFloats(\r\n            3,\r\n            (-this._cameraWorldMatrix.m[12] + position.x) * BabylonUnitsToPixels * direction,\r\n            (-this._cameraWorldMatrix.m[13] + position.y) * BabylonUnitsToPixels * direction,\r\n            (this._cameraWorldMatrix.m[14] - position.z) * BabylonUnitsToPixels,\r\n            this._cameraWorldMatrix.m[15] * 0.00001 * BabylonUnitsToPixels\r\n        );\r\n\r\n        // Adjust other values to be pixels vs Babylon units\r\n        scaledAndTranslatedObjectMatrix.multiplyAtIndex(3, BabylonUnitsToPixels);\r\n        scaledAndTranslatedObjectMatrix.multiplyAtIndex(7, BabylonUnitsToPixels);\r\n        scaledAndTranslatedObjectMatrix.multiplyAtIndex(11, BabylonUnitsToPixels);\r\n\r\n        return scaledAndTranslatedObjectMatrix;\r\n    }\r\n\r\n    protected _renderHtmlMesh(htmlMesh: HtmlMesh, useRightHandedSystem: boolean) {\r\n        if (!htmlMesh.element || !htmlMesh.element.firstElementChild) {\r\n            // nothing to render, so bail\r\n            return;\r\n        }\r\n\r\n        // We need to ensure html mesh data is initialized before\r\n        // computing the base scale factor\r\n        let htmlMeshData = this._cache.htmlMeshData.get(htmlMesh);\r\n        if (!htmlMeshData) {\r\n            htmlMeshData = { style: \"\" };\r\n            this._cache.htmlMeshData.set(htmlMesh, htmlMeshData);\r\n        }\r\n\r\n        const cameraElement = htmlMesh._isCanvasOverlay ? this._overlayElements?.cameraElement : this._inSceneElements?.cameraElement;\r\n\r\n        if (htmlMesh.element.parentNode !== cameraElement) {\r\n            cameraElement!.appendChild(htmlMesh.element);\r\n        }\r\n\r\n        // If the htmlMesh content has changed, update the base scale factor\r\n        if (htmlMesh.requiresUpdate) {\r\n            this._updateBaseScaleFactor(htmlMesh);\r\n        }\r\n\r\n        // Get the transformation matrix for the html mesh\r\n        const scaledAndTranslatedObjectMatrix = this._getTransformationMatrix(htmlMesh, useRightHandedSystem);\r\n\r\n        let style = `translate(-50%, -50%) ${this._getHtmlContentCssMatrix(scaledAndTranslatedObjectMatrix, useRightHandedSystem)}`;\r\n        // In a right handed system, screens are on the wrong side of the mesh, so we have to rotate by Math.PI which results in the matrix3d seen below\r\n        // Also in RH + billboard mode, we cancel the handedness so we do not need to scale on x\r\n        style += `${useRightHandedSystem ? `matrix3d(${htmlMesh.billboardMode !== TransformNode.BILLBOARDMODE_NONE ? 1 : -1}, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1)` : \"\"}`;\r\n\r\n        if (htmlMeshData.style !== style) {\r\n            htmlMesh.element.style.webkitTransform = style;\r\n            htmlMesh.element.style.transform = style;\r\n        }\r\n\r\n        htmlMesh._markAsUpdated();\r\n    }\r\n\r\n    protected _render(scene: Scene, camera: Camera) {\r\n        let needsUpdate = false;\r\n\r\n        const useRightHandedSystem = scene.useRightHandedSystem;\r\n\r\n        // Update the container position and size if necessary\r\n        this._updateContainerPositionIfNeeded();\r\n\r\n        // Check for a camera change\r\n        if (this._cameraMatrixUpdated) {\r\n            this._cameraMatrixUpdated = false;\r\n            needsUpdate = true;\r\n        }\r\n\r\n        // If the camera position has changed, then we also need to update\r\n        if (\r\n            camera.position.x !== this._cache.cameraData.position.x ||\r\n            camera.position.y !== this._cache.cameraData.position.y ||\r\n            camera.position.z !== this._cache.cameraData.position.z\r\n        ) {\r\n            this._cache.cameraData.position.copyFrom(camera.position);\r\n            needsUpdate = true;\r\n        }\r\n\r\n        // Check for a dpr change\r\n        if (window.devicePixelRatio !== this._lastDevicePixelRatio) {\r\n            this._lastDevicePixelRatio = window.devicePixelRatio;\r\n            Logger.Log(\"In render - dpr changed: \", this._lastDevicePixelRatio);\r\n            needsUpdate = true;\r\n        }\r\n\r\n        // Check if any meshes need to be updated\r\n        const meshesNeedingUpdate = scene.meshes.filter((mesh) => (mesh as any)[\"isHtmlMesh\"] && (needsUpdate || (mesh as HtmlMesh).requiresUpdate));\r\n        needsUpdate = needsUpdate || meshesNeedingUpdate.length > 0;\r\n\r\n        if (!needsUpdate) {\r\n            return;\r\n        }\r\n\r\n        // Get a projection matrix for the camera\r\n        const projectionMatrix = camera.getProjectionMatrix();\r\n        const fov = projectionMatrix.m[5] * this._heightHalf;\r\n\r\n        if (this._cache.cameraData.fov !== fov) {\r\n            const source = [this._overlayElements?.domElement, this._inSceneElements?.domElement];\r\n            if (camera.mode == Camera.PERSPECTIVE_CAMERA) {\r\n                for (const el of source) {\r\n                    if (el) {\r\n                        el.style.webkitPerspective = fov + \"px\";\r\n                        el.style.perspective = fov + \"px\";\r\n                    }\r\n                }\r\n            } else {\r\n                for (const el of source) {\r\n                    if (el) {\r\n                        el.style.webkitPerspective = \"\";\r\n                        el.style.perspective = \"\";\r\n                    }\r\n                }\r\n            }\r\n            this._cache.cameraData.fov = fov;\r\n        }\r\n\r\n        // Get the CSS matrix for the camera (which will include any camera rotation)\r\n        if (camera.parent === null) {\r\n            camera.computeWorldMatrix();\r\n        }\r\n\r\n        const cameraMatrixWorld = this._temp.cameraWorldMatrix;\r\n        cameraMatrixWorld.copyFrom(camera.getWorldMatrix());\r\n        const cameraRotationMatrix = this._temp.cameraRotationMatrix;\r\n        cameraMatrixWorld.getRotationMatrix().transposeToRef(cameraRotationMatrix);\r\n\r\n        const cameraMatrixWorldAsArray = this._temp.cameraWorldMatrixAsArray;\r\n        cameraMatrixWorld.copyToArray(cameraMatrixWorldAsArray);\r\n\r\n        // For a few values, we have to adjust the direction based on the handedness of the system\r\n        const direction = useRightHandedSystem ? 1 : -1;\r\n\r\n        cameraMatrixWorldAsArray[1] = cameraRotationMatrix.m[1];\r\n        cameraMatrixWorldAsArray[2] = cameraRotationMatrix.m[2] * direction;\r\n        cameraMatrixWorldAsArray[4] = cameraRotationMatrix.m[4] * direction;\r\n        cameraMatrixWorldAsArray[6] = cameraRotationMatrix.m[6] * direction;\r\n        cameraMatrixWorldAsArray[8] = cameraRotationMatrix.m[8] * direction;\r\n        cameraMatrixWorldAsArray[9] = cameraRotationMatrix.m[9] * direction;\r\n\r\n        Matrix.FromArrayToRef(cameraMatrixWorldAsArray, 0, cameraMatrixWorld);\r\n\r\n        const cameraCSSMatrix = this._getCameraCssMatrix(cameraMatrixWorld);\r\n        const style = cameraCSSMatrix;\r\n\r\n        if (this._cache.cameraData.style !== style) {\r\n            const source = [this._inSceneElements?.cameraElement, this._overlayElements?.cameraElement];\r\n            for (const el of source) {\r\n                if (el) {\r\n                    el.style.webkitTransform = style;\r\n                    el.style.transform = style;\r\n                }\r\n            }\r\n            this._cache.cameraData.style = style;\r\n        }\r\n\r\n        // _Render objects if necessary\r\n        for (const mesh of meshesNeedingUpdate) {\r\n            this._renderHtmlMesh(mesh as HtmlMesh, useRightHandedSystem);\r\n        }\r\n    }\r\n\r\n    protected _updateBaseScaleFactor(htmlMesh: HtmlMesh) {\r\n        // Get screen width and height\r\n        let screenWidth = this._width;\r\n        let screenHeight = this._height;\r\n\r\n        // Calculate aspect ratios\r\n        const htmlMeshAspectRatio = (htmlMesh.width || 1) / (htmlMesh.height || 1);\r\n        const screenAspectRatio = screenWidth / screenHeight;\r\n\r\n        // Adjust screen dimensions based on aspect ratios\r\n        if (htmlMeshAspectRatio > screenAspectRatio) {\r\n            // If the HTML mesh is wider relative to its height than the screen, adjust the screen width\r\n            screenWidth = screenHeight * htmlMeshAspectRatio;\r\n        } else {\r\n            // If the HTML mesh is taller relative to its width than the screen, adjust the screen height\r\n            screenHeight = screenWidth / htmlMeshAspectRatio;\r\n        }\r\n\r\n        // Set content to fill screen so we get max resolution when it is shrunk to fit the mesh\r\n        htmlMesh.setContentSizePx(screenWidth, screenHeight);\r\n    }\r\n\r\n    protected _updateContainerPositionIfNeeded() {\r\n        // Determine if the canvas has moved on the screen\r\n        const canvasRect = this._engine.getRenderingCanvasClientRect();\r\n\r\n        // canvas rect may be null if layout not complete\r\n        if (!canvasRect) {\r\n            Logger.Warn(PositionUpdateFailMessage);\r\n            return;\r\n        }\r\n        const scrollTop = window.scrollY;\r\n        const scrollLeft = window.scrollX;\r\n        const canvasDocumentTop = canvasRect.top + scrollTop;\r\n        const canvasDocumentLeft = canvasRect.left + scrollLeft;\r\n\r\n        if (this._previousCanvasDocumentPosition.top !== canvasDocumentTop || this._previousCanvasDocumentPosition.left !== canvasDocumentLeft) {\r\n            this._previousCanvasDocumentPosition.top = canvasDocumentTop;\r\n            this._previousCanvasDocumentPosition.left = canvasDocumentLeft;\r\n\r\n            const source = [this._inSceneElements?.container, this._overlayElements?.container];\r\n            for (const container of source) {\r\n                if (!container) {\r\n                    continue;\r\n                }\r\n                // set the top and left of the css container to match the canvas\r\n                const containerParent = container.offsetParent as HTMLElement;\r\n                const parentRect = containerParent.getBoundingClientRect();\r\n                const parentDocumentTop = parentRect.top + scrollTop;\r\n                const parentDocumentLeft = parentRect.left + scrollLeft;\r\n\r\n                const ancestorMarginsAndPadding = this._getAncestorMarginsAndPadding(containerParent);\r\n\r\n                // Add the body margin\r\n                const bodyStyle = window.getComputedStyle(document.body);\r\n                const bodyMarginTop = parseInt(bodyStyle.marginTop, 10);\r\n                const bodyMarginLeft = parseInt(bodyStyle.marginLeft, 10);\r\n\r\n                container.style.top = `${canvasDocumentTop - parentDocumentTop - ancestorMarginsAndPadding.marginTop + ancestorMarginsAndPadding.paddingTop + bodyMarginTop}px`;\r\n                container.style.left = `${\r\n                    canvasDocumentLeft - parentDocumentLeft - ancestorMarginsAndPadding.marginLeft + ancestorMarginsAndPadding.paddingLeft + bodyMarginLeft\r\n                }px`;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _onCameraMatrixChanged = (camera: Camera) => {\r\n        this._cameraWorldMatrix = camera.getWorldMatrix();\r\n        this._cameraMatrixUpdated = true;\r\n    };\r\n\r\n    private _epsilon(value: number) {\r\n        return Math.abs(value) < 1e-10 ? 0 : value;\r\n    }\r\n\r\n    // Get total margins and padding for an element, excluding the body and document margins\r\n    private _getAncestorMarginsAndPadding(element: HTMLElement) {\r\n        let marginTop = 0;\r\n        let marginLeft = 0;\r\n        let paddingTop = 0;\r\n        let paddingLeft = 0;\r\n\r\n        while (element && element !== document.body && element !== document.documentElement) {\r\n            const style = window.getComputedStyle(element);\r\n            marginTop += parseInt(style.marginTop, 10);\r\n            marginLeft += parseInt(style.marginLeft, 10);\r\n            paddingTop += parseInt(style.paddingTop, 10);\r\n            paddingLeft += parseInt(style.paddingLeft, 10);\r\n            element = element.offsetParent as HTMLElement;\r\n        }\r\n\r\n        return { marginTop, marginLeft, paddingTop, paddingLeft };\r\n    }\r\n}\r\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","import { Tools } from \"core/Misc/tools\";\r\n\r\n// A capture management system to ensure that the correct object has the pointer\r\n// events by eliminating race conditions that can cause the pointer events to be\r\n// released by a different object after they are captured leaving no object\r\n// as the owner.  It does this by queueing requests and only allowing\r\n// capture when the current capture owner releases pointer events.\r\n\r\ntype CaptureReleaseCallback = () => void;\r\n\r\ntype CaptureReleaseCallbacks = {\r\n    capture: CaptureReleaseCallback;\r\n    release: CaptureReleaseCallback;\r\n};\r\n\r\nlet CaptureRequestQueue: string[] = [];\r\n\r\n// Key is request id, value is object with capture and release callbacks\r\nconst PendingRequestCallbacks: Map<string, CaptureReleaseCallbacks> = new Map();\r\n\r\n// Keep track of release requests with no matching capture request\r\n// in case the release request arrived before the capture to avoid\r\n// the capture request never getting released.\r\nlet UnmatchedReleaseRequests: string[] = [];\r\n\r\nlet CurrentOwner: string | null = null; // Called on first capture or release request\r\n\r\n/**\r\n * Get the id of the object currently capturing pointer events\r\n * @returns The id of the object currently capturing pointer events\r\n * or null if no object is capturing pointer events\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const getCapturingId = () => {\r\n    return CurrentOwner;\r\n};\r\n\r\n/**\r\n * Request that the object with the given id capture pointer events.  If there is no current\r\n * owner, then the request is granted immediately.  If there is a current owner, then the request\r\n * is queued until the current owner releases pointer events.\r\n * @param requestId An id to identify the request.  This id will be used to match the capture\r\n * request with the release request.\r\n * @param captureCallback The callback to call when the request is granted and the object is capturing\r\n * @param releaseCallback The callback to call when the object is no longer capturing pointer events\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const requestCapture = (requestId: string, captureCallback: CaptureReleaseCallback, releaseCallback: CaptureReleaseCallback) => {\r\n    DebugLog(`In pointerEventsCapture.requestCapture - Pointer events capture requested for ${requestId}`);\r\n\r\n    // If there is a release for this request, then ignore the request\r\n    if (RemoveUnmatchedRequest(requestId)) {\r\n        DebugLog(`In pointerEventsCapture.requestCapture - Capture request matched previous release request ${requestId}.  Cancelling capture request`);\r\n        return;\r\n    } else if (requestId !== CurrentOwner) {\r\n        // if the request is not already in the queue, add it to the queue\r\n        EnqueueCaptureRequest(requestId, captureCallback, releaseCallback);\r\n    }\r\n\r\n    if (!CurrentOwner) {\r\n        // If there is no current owner, go ahead and grant the request\r\n        TransferPointerEventsOwnership();\r\n    }\r\n    // If the request id is the current owner, do nothing\r\n};\r\n\r\n/**\r\n * Release pointer events from the object with the given id.  If the object is the current owner\r\n * then pointer events are released immediately.  If the object is not the current owner, then the\r\n * associated capture request is removed from the queue.  If there is no matching capture request\r\n * in the queue, then the release request is added to a list of unmatched release requests and will\r\n * negate the next capture request with the same id.  This is to guard against the possibility that\r\n * the release request arrived before the capture request.\r\n * @param requestId The id which should match the id of the capture request\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const requestRelease = (requestId: string | null) => {\r\n    DebugLog(`In pointerEventsCapture.requestRelease - Pointer events release requested for ${requestId}`);\r\n\r\n    // if the requestId is the current capture holder release it\r\n    if (!requestId || requestId === CurrentOwner) {\r\n        TransferPointerEventsOwnership();\r\n    } else if (CancelRequest(requestId)) {\r\n        // if the request is in the queue, but not the current capture holder, remove it and it's callbacks\r\n        PendingRequestCallbacks.delete(requestId);\r\n    } else {\r\n        DebugLog(`In pointerEventsCapture.requestRelease - Received release request ${requestId} but no matching capture request was received`);\r\n        // request was not current and not in queue, likely because we received a release\r\n        // request before the capture.  Add it to the unmatched list to guard against this possibility\r\n        if (!UnmatchedReleaseRequests.includes(requestId)) {\r\n            UnmatchedReleaseRequests.push(requestId);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Release pointer events from the current owner\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const releaseCurrent = () => {\r\n    requestRelease(CurrentOwner);\r\n};\r\n\r\nconst EnqueueCaptureRequest = (requestId: string, capture: CaptureReleaseCallback, release: CaptureReleaseCallback) => {\r\n    DebugLog(`In pointerEventsCapture.enqueueCaptureRequest - Enqueueing capture request for  ${requestId}`);\r\n    if (!CaptureRequestQueue.includes(requestId)) {\r\n        CaptureRequestQueue.push(requestId);\r\n        PendingRequestCallbacks.set(requestId, { capture, release });\r\n    }\r\n};\r\n\r\n// Removes the request from the queue if it exists.  Returns true\r\n// if the request was found and removed, otherwise false\r\nconst CancelRequest = (requestId: string | null) => {\r\n    let removed = false;\r\n    CaptureRequestQueue = CaptureRequestQueue.filter((id) => {\r\n        if (id !== requestId) {\r\n            return true;\r\n        } else {\r\n            removed = true;\r\n            DebugLog(`In pointerEventsCapture.cancelRequest - Canceling pointer events capture request ${requestId}`);\r\n            return false;\r\n        }\r\n    });\r\n    return removed;\r\n};\r\n\r\nconst RemoveUnmatchedRequest = (requestId: string) => {\r\n    let removed = false;\r\n    UnmatchedReleaseRequests = UnmatchedReleaseRequests.filter((id) => {\r\n        if (id !== requestId) {\r\n            return true;\r\n        } else {\r\n            removed = true;\r\n            return false;\r\n        }\r\n    });\r\n    return removed;\r\n};\r\n\r\nconst TransferPointerEventsOwnership = () => {\r\n    const newOwnerId = NextCaptureRequest();\r\n    DebugLog(`In pointerEventsCapture.transferPointerEventsOwnership - Transferrring pointer events from ${CurrentOwner} to ${newOwnerId}`);\r\n    // Release the current owner\r\n    DoRelease();\r\n    if (newOwnerId) {\r\n        DoCapture(newOwnerId);\r\n    }\r\n};\r\n\r\nconst DoRelease = () => {\r\n    DebugLog(`In pointerEventsCapture.doRelease - Releasing pointer events from ${CurrentOwner}`);\r\n    if (CurrentOwner) {\r\n        // call the release callback\r\n        PendingRequestCallbacks.get(CurrentOwner)?.release();\r\n        // And remove the callbacks\r\n        PendingRequestCallbacks.delete(CurrentOwner);\r\n        CurrentOwner = null;\r\n    }\r\n};\r\n\r\nconst DoCapture = (newOwnerId: string) => {\r\n    if (newOwnerId) {\r\n        // call the capture callback\r\n        PendingRequestCallbacks.get(newOwnerId)?.capture();\r\n    }\r\n    CurrentOwner = newOwnerId;\r\n    DebugLog(`In pointerEventsCapture.doCapture - Pointer events now captured by ${newOwnerId}`);\r\n};\r\n\r\nconst NextCaptureRequest = () => {\r\n    return CaptureRequestQueue.length > 0 ? CaptureRequestQueue.shift() : null;\r\n};\r\n\r\n// #region Debugging support\r\ndeclare global {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    interface Window {\r\n        // eslint-disable-next-line @typescript-eslint/naming-convention\r\n        \"pointer-events-capture-debug\": boolean | null;\r\n    }\r\n}\r\n\r\nconst DebugLog = (message: string) => {\r\n    // If we are runnning in a test runner (in node, so window is not defined)\r\n    // or if the debug flag is set, then log the message\r\n    if (typeof window === \"undefined\" || window[\"pointer-events-capture-debug\"]) {\r\n        Tools.Log(\r\n            `${performance.now()} - game.scene.pointerEvents - ${message}\\ncurrentOwner: ${CurrentOwner}\\nqueue: ${CaptureRequestQueue}\\nunmatched: ${UnmatchedReleaseRequests}`\r\n        );\r\n    }\r\n};\r\n// #endregion Debugging support\r\n","import type { IDisposable, Scene } from \"core/scene\";\r\nimport type { BMFontChar } from \"./sdf/bmFont\";\r\nimport type { SdfFont } from \"./sdf/font\";\r\nimport { Texture } from \"core/Materials/Textures/texture\";\r\n\r\nenum CharCode {\r\n    SPACE = 32,\r\n    TOFU = 0xfffc,\r\n}\r\n\r\n/**\r\n * Class representing a font asset for SDF (Signed Distance Field) rendering.\r\n */\r\nexport class FontAsset implements IDisposable {\r\n    private readonly _chars = new Map<number, BMFontChar>();\r\n    private readonly _charsRegex: RegExp;\r\n    private readonly _kernings = new Map<number, Map<number, number>>();\r\n\r\n    /** @internal */\r\n    public readonly _font: SdfFont;\r\n\r\n    /**\r\n     * Gets the font scale value\r\n     */\r\n    public readonly scale: number;\r\n\r\n    /**\r\n     * Gets the list of used textures\r\n     */\r\n    public readonly textures: Texture[];\r\n\r\n    /**\r\n     * Creates a new FontAsset instance.\r\n     * @param definitionData defines the font data in JSON format.\r\n     * @param textureUrl defines the url of the texture to use for the font.\r\n     * @param scene defines the hosting scene.\r\n     */\r\n    public constructor(definitionData: string, textureUrl: string, scene?: Scene) {\r\n        this._font = JSON.parse(definitionData) as SdfFont;\r\n        // So far we only consider one page\r\n        this._font.pages = [textureUrl];\r\n\r\n        this._font.chars.forEach((char) => this._chars.set(char.id, char));\r\n        this._font.kernings.forEach((kerning) => {\r\n            let submap = this._kernings.get(kerning.first);\r\n            if (!submap) {\r\n                submap = new Map();\r\n                this._kernings.set(kerning.first, submap);\r\n            }\r\n            submap.set(kerning.second, kerning.amount);\r\n        });\r\n        this._charsRegex = new RegExp(`[${this._font.chars.map((c) => c.char.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")).join(\"\")}]`, \"g\");\r\n\r\n        this._updateFallbacks();\r\n\r\n        this.scale = 1 / this._font.info.size;\r\n        this.textures = this._font.pages.map((page) => {\r\n            const texture = new Texture(page, scene, { noMipmap: false, invertY: false });\r\n            texture.anisotropicFilteringLevel = 16;\r\n            return texture;\r\n        });\r\n    }\r\n\r\n    dispose(): void {\r\n        for (const texture of this.textures) {\r\n            texture.dispose();\r\n        }\r\n        this.textures.length = 0;\r\n    }\r\n\r\n    private _updateFallbacks() {\r\n        if (!this._chars.has(CharCode.SPACE)) {\r\n            this._chars.set(CharCode.SPACE, {\r\n                id: CharCode.SPACE,\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n                xoffset: 0,\r\n                yoffset: 0,\r\n                xadvance: this._font.info.size * 0.5,\r\n                page: -1,\r\n                chnl: -1,\r\n                index: -1,\r\n                char: \" \",\r\n            });\r\n        }\r\n\r\n        if (!this._chars.has(CharCode.TOFU)) {\r\n            this._chars.set(CharCode.TOFU, {\r\n                id: CharCode.TOFU,\r\n                x: 0,\r\n                y: 0,\r\n                width: this._font.info.size,\r\n                height: this._font.info.size,\r\n                xoffset: 0,\r\n                yoffset: 0,\r\n                xadvance: this._font.info.size * 0.5,\r\n                page: -1,\r\n                chnl: -1,\r\n                index: -1,\r\n                char: \"￿\",\r\n            });\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    public _getChar(charCode: number) {\r\n        return this._chars.get(charCode) || this._chars.get(CharCode.TOFU)!;\r\n    }\r\n\r\n    /** @internal */\r\n    public _getKerning(first: number, second: number) {\r\n        return this._kernings.get(first)?.get(second) || 0;\r\n    }\r\n\r\n    /** @internal */\r\n    public _unsupportedChars(text: string) {\r\n        return text.replace(this._charsRegex, \"\");\r\n    }\r\n}\r\n","import type { AbstractMesh } from \"core/Meshes/abstractMesh\";\r\nimport type { Behavior } from \"core/Behaviors/behavior\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { Logger } from \"core/Misc/logger\";\r\nimport { requestCapture, requestRelease, releaseCurrent, getCapturingId } from \"./pointerEventsCapture\";\r\n\r\n// Module level variable for holding the current scene\r\nlet LocalScene: Scene | null = null;\r\n\r\n// Module level variable to hold the count of behavior instances that are currently capturing pointer events\r\n// on entry.  This is used to determine if we need to start or stop observing pointer movement.\r\nlet CaptureOnEnterCount = 0;\r\n\r\n// Map used to store instance of the PointerEventsCaptureBehavior for a mesh\r\n// We do this because this gets checked on pointer move and we don't want to\r\n// use getBehaviorByName() because that is a linear search\r\nconst MeshToBehaviorMap = new WeakMap<AbstractMesh, PointerEventsCaptureBehavior>();\r\n\r\nconst StartCaptureOnEnter = (scene: Scene) => {\r\n    // If we are not in a browser, do nothing\r\n    if (typeof document === \"undefined\") {\r\n        return;\r\n    }\r\n    if (CaptureOnEnterCount === 0) {\r\n        document.addEventListener(\"pointermove\", OnPointerMove);\r\n        document.addEventListener(\"touchstart\", OnPointerMove);\r\n        LocalScene = LocalScene ?? scene;\r\n        Logger.Log(\"PointerEventsCaptureBehavior: Starting observation of pointer move events.\");\r\n        LocalScene.onDisposeObservable.add(DoStopCaptureOnEnter);\r\n    }\r\n    CaptureOnEnterCount++;\r\n};\r\n\r\nconst DoStopCaptureOnEnter = () => {\r\n    document.removeEventListener(\"pointermove\", OnPointerMove);\r\n    document.removeEventListener(\"touchstart\", OnPointerMove);\r\n    LocalScene = null;\r\n    Logger.Log(\"PointerEventsCaptureBehavior: Stopping observation of pointer move events.\");\r\n    CaptureOnEnterCount = 0;\r\n};\r\n\r\nconst StopCaptureOnEnter = () => {\r\n    // If we are not in a browser, do nothing\r\n    if (typeof document === \"undefined\") {\r\n        return;\r\n    }\r\n\r\n    // If we are not observing pointer movement, do nothing\r\n    if (!LocalScene) {\r\n        return;\r\n    }\r\n\r\n    CaptureOnEnterCount--;\r\n    if (CaptureOnEnterCount <= 0) {\r\n        DoStopCaptureOnEnter();\r\n    }\r\n};\r\n\r\n// Module level function used to determine if an entered mesh should capture pointer events\r\nconst OnPointerMove = (evt: PointerEvent | TouchEvent) => {\r\n    if (!LocalScene) {\r\n        return;\r\n    }\r\n\r\n    const canvasRect = LocalScene.getEngine().getRenderingCanvasClientRect();\r\n    if (!canvasRect) {\r\n        return;\r\n    }\r\n\r\n    // Get the object that contains the client X and Y from either the pointer event or from the\r\n    // TouchEvent touch\r\n    const { clientX, clientY } = \"touches\" in evt ? evt.touches[0] : evt;\r\n\r\n    // get the picked mesh, if any\r\n    const pointerScreenX = clientX - canvasRect.left;\r\n    const pointerScreenY = clientY - canvasRect.top;\r\n\r\n    let pointerCaptureBehavior: PointerEventsCaptureBehavior | undefined;\r\n    const pickResult = LocalScene.pick(pointerScreenX, pointerScreenY, (mesh) => {\r\n        // If the mesh has an instance of PointerEventsCaptureBehavior attached to it,\r\n        // and capture on pointer enter is true, then we want to pick it\r\n        const pointerCaptureBehavior = MeshToBehaviorMap.get(mesh);\r\n        return mesh.isEnabled() && typeof pointerCaptureBehavior !== \"undefined\" && pointerCaptureBehavior._captureOnPointerEnter;\r\n    });\r\n\r\n    let pickedMesh: AbstractMesh | null;\r\n    if (pickResult.hit) {\r\n        pickedMesh = pickResult.pickedMesh;\r\n    } else {\r\n        pickedMesh = null;\r\n    }\r\n\r\n    const capturingIdAsInt = parseInt(getCapturingId() || \"\");\r\n\r\n    // if the picked mesh is the current capturing mesh, do nothing\r\n    if (pickedMesh && pickedMesh.uniqueId === capturingIdAsInt) {\r\n        return;\r\n    }\r\n\r\n    // If there is a capturing mesh and it is not the current picked mesh, or no\r\n    // mesh is picked, release the capturing mesh\r\n    if (capturingIdAsInt && (!pickedMesh || pickedMesh.uniqueId !== capturingIdAsInt)) {\r\n        releaseCurrent();\r\n    }\r\n\r\n    // If there is a picked mesh and it is not the current capturing mesh, capture\r\n    // the pointer events.  Note that the current capturing mesh has already been\r\n    // released above\r\n    if (pickedMesh) {\r\n        pointerCaptureBehavior = MeshToBehaviorMap.get(pickedMesh);\r\n        pointerCaptureBehavior!.capturePointerEvents();\r\n    }\r\n};\r\n\r\n/**\r\n * Behavior for any content that can capture pointer events, i.e. bypass the Babylon pointer event handling\r\n * and receive pointer events directly.  It will register the capture triggers and negotiate the capture and\r\n * release of pointer events.  Curerntly this applies only to HtmlMesh\r\n */\r\nexport class PointerEventsCaptureBehavior implements Behavior<AbstractMesh> {\r\n    /** gets or sets behavior's name */\r\n    public name = \"PointerEventsCaptureBehavior\";\r\n\r\n    private _attachedMesh: AbstractMesh | null;\r\n    /** @internal */\r\n    public _captureOnPointerEnter: boolean;\r\n\r\n    /**\r\n     * Gets or sets the mesh that the behavior is attached to\r\n     */\r\n    public get attachedMesh() {\r\n        return this._attachedMesh;\r\n    }\r\n\r\n    public set attachedMesh(value: AbstractMesh | null) {\r\n        this._attachedMesh = value;\r\n    }\r\n\r\n    constructor(\r\n        private _captureCallback: () => void,\r\n        private _releaseCallback: () => void,\r\n        { captureOnPointerEnter = true } = {}\r\n    ) {\r\n        this._attachedMesh = null;\r\n        this._captureOnPointerEnter = captureOnPointerEnter;\r\n\r\n        // Warn if we are not in a browser\r\n        if (typeof document === \"undefined\") {\r\n            Logger.Warn(`Creating an instance of PointerEventsCaptureBehavior outside of a browser.  The behavior will not work.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set if the behavior should capture pointer events when the pointer enters the mesh\r\n     */\r\n    public set captureOnPointerEnter(captureOnPointerEnter: boolean) {\r\n        if (this._captureOnPointerEnter === captureOnPointerEnter) {\r\n            return;\r\n        }\r\n        this._captureOnPointerEnter = captureOnPointerEnter;\r\n        if (this._attachedMesh) {\r\n            if (this._captureOnPointerEnter) {\r\n                StartCaptureOnEnter(this._attachedMesh.getScene());\r\n            } else {\r\n                StopCaptureOnEnter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function called when the behavior needs to be initialized (before attaching it to a target)\r\n     */\r\n    public init() {}\r\n\r\n    /**\r\n     * Called when the behavior is attached to a target\r\n     * @param mesh defines the target where the behavior is attached to\r\n     */\r\n    public attach(mesh: AbstractMesh) {\r\n        // Add a reference to this behavior on the mesh.  We do this so we can get a\r\n        // reference to the behavior in the onPointerMove function without relying on\r\n        // getBehaviorByName(), which does a linear search of the behaviors array.\r\n        this.attachedMesh = mesh;\r\n        MeshToBehaviorMap.set(mesh, this);\r\n        if (this._captureOnPointerEnter) {\r\n            StartCaptureOnEnter(mesh.getScene());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when the behavior is detached from its target\r\n     */\r\n    public detach() {\r\n        if (!this.attachedMesh) {\r\n            return;\r\n        }\r\n        // Remove the reference to this behavior from the mesh\r\n        MeshToBehaviorMap.delete(this.attachedMesh);\r\n        if (this._captureOnPointerEnter) {\r\n            StopCaptureOnEnter();\r\n        }\r\n        this.attachedMesh = null;\r\n    }\r\n\r\n    /**\r\n     * Dispose the behavior\r\n     */\r\n    public dispose() {\r\n        this.detach();\r\n    }\r\n\r\n    // Release pointer events\r\n    public releasePointerEvents() {\r\n        if (!this.attachedMesh) {\r\n            return;\r\n        }\r\n        requestRelease(this.attachedMesh.uniqueId.toString());\r\n    }\r\n\r\n    // Capture pointer events\r\n    public capturePointerEvents() {\r\n        if (!this.attachedMesh) {\r\n            return;\r\n        }\r\n        requestCapture(this.attachedMesh.uniqueId.toString(), this._captureCallback, this._releaseCallback);\r\n    }\r\n}\r\n","export type FitStrategyType = {\r\n    wrapElement(element: HTMLElement): HTMLElement;\r\n    updateSize(sizingElement: HTMLElement, width: number, height: number): void;\r\n};\r\n\r\nconst FitStrategyContain: FitStrategyType = {\r\n    wrapElement(element: HTMLElement): HTMLElement {\r\n        const sizingElement = document.createElement(\"div\");\r\n        sizingElement.style.display = \"flex\";\r\n        sizingElement.style.justifyContent = \"center\";\r\n        sizingElement.style.alignItems = \"center\";\r\n        const scalingElement = document.createElement(\"div\");\r\n        scalingElement.style.visibility = \"hidden\";\r\n        scalingElement.appendChild(element);\r\n        sizingElement.appendChild(scalingElement);\r\n        return sizingElement;\r\n    },\r\n    updateSize(sizingElement: HTMLElement, width: number, height: number) {\r\n        const scalingElement = sizingElement.firstElementChild! as HTMLElement;\r\n        sizingElement.style.width = `${width}px`;\r\n        sizingElement.style.height = `${height}px`;\r\n\r\n        const [childWidth, childHeight] = [scalingElement.offsetWidth, scalingElement.offsetHeight];\r\n        const scale = Math.min(width / childWidth, height / childHeight);\r\n        scalingElement.style.transform = `scale(${scale})`;\r\n        scalingElement.style.visibility = \"visible\";\r\n    },\r\n};\r\n\r\nconst FitStrategyCover: FitStrategyType = {\r\n    wrapElement(element: HTMLElement): HTMLElement {\r\n        const sizingElement = document.createElement(\"div\");\r\n        sizingElement.style.display = \"flex\";\r\n        sizingElement.style.justifyContent = \"center\";\r\n        sizingElement.style.alignItems = \"center\";\r\n        sizingElement.style.overflow = \"hidden\";\r\n        const scalingElement = document.createElement(\"div\");\r\n        scalingElement.style.visibility = \"hidden\";\r\n        scalingElement.appendChild(element);\r\n        sizingElement.appendChild(scalingElement);\r\n        return sizingElement;\r\n    },\r\n    updateSize(sizingElement: HTMLElement, width: number, height: number) {\r\n        const scalingElement = sizingElement.firstElementChild! as HTMLElement;\r\n        sizingElement.style.width = `${width}px`;\r\n        sizingElement.style.height = `${height}px`;\r\n\r\n        const [childWidth, childHeight] = [scalingElement.offsetWidth, scalingElement.offsetHeight];\r\n        const scale = Math.max(width / childWidth, height / childHeight);\r\n        scalingElement.style.transform = `scale(${scale})`;\r\n        scalingElement.style.visibility = \"visible\";\r\n    },\r\n};\r\n\r\nconst FitStrategyStretch: FitStrategyType = {\r\n    wrapElement(element: HTMLElement): HTMLElement {\r\n        const sizingElement = document.createElement(\"div\");\r\n        sizingElement.style.display = \"flex\";\r\n        sizingElement.style.justifyContent = \"center\";\r\n        sizingElement.style.alignItems = \"center\";\r\n        const scalingElement = document.createElement(\"div\");\r\n        scalingElement.style.visibility = \"hidden\";\r\n        scalingElement.appendChild(element);\r\n        sizingElement.appendChild(scalingElement);\r\n        return sizingElement;\r\n    },\r\n    updateSize(sizingElement: HTMLElement, width: number, height: number) {\r\n        const scalingElement = sizingElement.firstElementChild! as HTMLElement;\r\n        sizingElement.style.width = `${width}px`;\r\n        sizingElement.style.height = `${height}px`;\r\n\r\n        const [childWidth, childHeight] = [scalingElement.offsetWidth, scalingElement.offsetHeight];\r\n        scalingElement.style.transform = `scale(${width / childWidth}, ${height / childHeight})`;\r\n        scalingElement.style.visibility = \"visible\";\r\n    },\r\n};\r\n\r\nconst FitStrategyNone: FitStrategyType = {\r\n    wrapElement(element: HTMLElement): HTMLElement {\r\n        return element;\r\n    },\r\n    updateSize(sizingElement: HTMLElement, width: number, height: number) {\r\n        if (sizingElement) {\r\n            sizingElement.style.width = `${width}px`;\r\n            sizingElement.style.height = `${height}px`;\r\n        }\r\n    },\r\n};\r\n\r\nexport const FitStrategy = {\r\n    CONTAIN: FitStrategyContain,\r\n    COVER: FitStrategyCover,\r\n    STRETCH: FitStrategyStretch,\r\n    NONE: FitStrategyNone,\r\n};\r\n","import { Mesh } from \"core/Meshes/mesh\";\r\nimport { CreatePlaneVertexData } from \"core/Meshes/Builders/planeBuilder\";\r\nimport { StandardMaterial } from \"core/Materials/standardMaterial\";\r\nimport { Matrix } from \"core/Maths/math\";\r\nimport { PointerEventsCaptureBehavior } from \"./pointerEventsCaptureBehavior\";\r\nimport type { Scene } from \"core/scene\";\r\nimport { Logger } from \"core/Misc/logger\";\r\nimport type { FitStrategyType } from \"./fitStrategy\";\r\nimport { FitStrategy } from \"./fitStrategy\";\r\n\r\n/**\r\n * This class represents HTML content that we want to render as though it is part of the scene.  The HTML content is actually\r\n * rendered below the canvas, but a depth mask is created by this class that writes to the depth buffer but does not\r\n * write to the color buffer, effectively punching a hole in the canvas.  CSS transforms are used to scale, translate, and rotate\r\n * the HTML content so that it matches the camera and mesh orientation.  The class supports interactions in editable and non-editable mode.\r\n * In non-editable mode (the default), events are passed to the HTML content when the pointer is over the mask (and not occluded by other meshes\r\n * in the scene).\r\n * @see https://playground.babylonjs.com/#HVHYJC#5\r\n * @see https://playground.babylonjs.com/#B17TC7#112\r\n */\r\nexport class HtmlMesh extends Mesh {\r\n    /**\r\n     * Helps identifying a html mesh from a regular mesh\r\n     */\r\n    public get isHtmlMesh() {\r\n        return true;\r\n    }\r\n\r\n    // Override the super class's _isEnabled property so we can control when the mesh\r\n    // is enabled.  I.e., we don't want to render the mesh until there is content to show.\r\n    private _enabled = false;\r\n\r\n    // The mesh is ready when content has been set and the content size has been set\r\n    // The former is done by the user, the latter is done by the renderer.\r\n    private _ready = false;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _isCanvasOverlay = false;\r\n\r\n    private _requiresUpdate = true;\r\n\r\n    private _element?: HTMLElement;\r\n    private _width?: number;\r\n    private _height?: number;\r\n\r\n    private _inverseScaleMatrix: Matrix | null = null;\r\n\r\n    private _captureOnPointerEnter: boolean = true;\r\n    private _pointerEventCaptureBehavior: PointerEventsCaptureBehavior | null = null;\r\n\r\n    private _sourceWidth: number | null = null;\r\n    private _sourceHeight: number | null = null;\r\n\r\n    /**\r\n     * Return the source width of the content in pixels\r\n     */\r\n    public get sourceWidth() {\r\n        return this._sourceWidth;\r\n    }\r\n\r\n    /**\r\n     * Return the source height of the content in pixels\r\n     */\r\n    public get sourceHeight() {\r\n        return this._sourceHeight;\r\n    }\r\n\r\n    private _worldMatrixUpdateObserver: any;\r\n\r\n    private _fitStrategy: FitStrategyType = FitStrategy.NONE;\r\n\r\n    /**\r\n     * Contruct an instance of HtmlMesh\r\n     * @param scene\r\n     * @param id The id of the mesh.  Will be used as the id of the HTML element as well.\r\n     * @param options object with optional parameters\r\n     */\r\n    constructor(scene: Scene, id: string, { captureOnPointerEnter = true, isCanvasOverlay = false, fitStrategy = FitStrategy.NONE } = {}) {\r\n        super(id, scene);\r\n\r\n        // Requires a browser to work.  Bail if we aren't running in a browser\r\n        if (typeof document === \"undefined\") {\r\n            Logger.Warn(`Creating an instance of an HtmlMesh with id ${id} outside of a browser.  The mesh will not be visible.`);\r\n            return;\r\n        }\r\n\r\n        this._fitStrategy = fitStrategy;\r\n        this._isCanvasOverlay = isCanvasOverlay;\r\n        this._createMask();\r\n        this._element = this._createElement();\r\n\r\n        // Set enabled by default, so this will show as soon as it's ready\r\n        this.setEnabled(true);\r\n\r\n        this._captureOnPointerEnter = captureOnPointerEnter;\r\n\r\n        // Create a behavior to capture pointer events\r\n        this._pointerEventCaptureBehavior = new PointerEventsCaptureBehavior(this.capturePointerEvents.bind(this), this.releasePointerEvents.bind(this), {\r\n            captureOnPointerEnter: this._captureOnPointerEnter,\r\n        });\r\n        this.addBehavior(this._pointerEventCaptureBehavior);\r\n    }\r\n\r\n    /**\r\n     * The width of the content in pixels\r\n     */\r\n    public get width() {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the content in pixels\r\n     */\r\n    public get height() {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * The HTML element that is being rendered as a mesh\r\n     */\r\n    public get element() {\r\n        return this._element;\r\n    }\r\n\r\n    /**\r\n     * True if the mesh has been moved, rotated, or scaled since the last time this\r\n     * property was read.  This property is reset to false after reading.\r\n     */\r\n    public get requiresUpdate() {\r\n        return this._requiresUpdate;\r\n    }\r\n\r\n    /**\r\n     * Enable capture for the pointer when entering the mesh area\r\n     */\r\n    public set captureOnPointerEnter(captureOnPointerEnter: boolean) {\r\n        this._captureOnPointerEnter = captureOnPointerEnter;\r\n        if (this._pointerEventCaptureBehavior) {\r\n            this._pointerEventCaptureBehavior.captureOnPointerEnter = captureOnPointerEnter;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disposes of the mesh and the HTML element\r\n     */\r\n    public override dispose() {\r\n        super.dispose();\r\n        this._element?.remove();\r\n        this._element = undefined;\r\n        if (this._pointerEventCaptureBehavior) {\r\n            this._pointerEventCaptureBehavior.dispose();\r\n            this._pointerEventCaptureBehavior = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    public _markAsUpdated() {\r\n        this._requiresUpdate = false;\r\n    }\r\n\r\n    /**\r\n     * Sets the content of the element to the specified content adjusting the mesh scale to match and making it visible.\r\n     * If the the specified content is undefined, then it will make the mesh invisible.  In either case it will clear the\r\n     * element content first.\r\n     * @param element The element to render as a mesh\r\n     * @param width The width of the mesh in Babylon units\r\n     * @param height The height of the mesh in Babylon units\r\n     */\r\n    setContent(element: HTMLElement, width: number, height: number) {\r\n        // If content is changed, we are no longer ready\r\n        this._setAsReady(false);\r\n\r\n        // Also invalidate the source width and height\r\n        this._sourceWidth = null;\r\n        this._sourceHeight = null;\r\n\r\n        if (!this._element) {\r\n            return;\r\n        }\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._requiresUpdate = true;\r\n\r\n        this.scaling.setAll(1);\r\n\r\n        if (element) {\r\n            this._element.appendChild(this._fitStrategy.wrapElement(element));\r\n\r\n            this._updateScaleIfNecessary();\r\n        }\r\n\r\n        if (this.sourceWidth && this.sourceHeight) {\r\n            this._setAsReady(true);\r\n        }\r\n    }\r\n\r\n    // Overides BABYLON.Mesh.setEnabled\r\n    public override setEnabled(enabled: boolean) {\r\n        // Capture requested enabled state\r\n        this._enabled = enabled;\r\n\r\n        // If disabling or enabling and we are ready\r\n        if (!enabled || this._ready) {\r\n            this._doSetEnabled(enabled);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the content size in pixels\r\n     * @param width width of the source\r\n     * @param height height of the source\r\n     */\r\n    public setContentSizePx(width: number, height: number) {\r\n        this._sourceWidth = width;\r\n        this._sourceHeight = height;\r\n\r\n        if (!this._element || !this._element.firstElementChild) {\r\n            return;\r\n        }\r\n\r\n        this._fitStrategy.updateSize(this._element.firstElementChild as HTMLElement, width, height);\r\n\r\n        this._updateScaleIfNecessary();\r\n\r\n        if (this.width && this.height) {\r\n            this._setAsReady(true);\r\n        }\r\n    }\r\n\r\n    protected _setAsReady(ready: boolean) {\r\n        this._ready = ready;\r\n        if (ready) {\r\n            this._doSetEnabled(this._enabled);\r\n        } else {\r\n            this._doSetEnabled(false);\r\n        }\r\n    }\r\n\r\n    protected _doSetEnabled(enabled: boolean) {\r\n        if (!this._element) {\r\n            return;\r\n        }\r\n\r\n        //if enabled, then start listening for changes to the\r\n        // scaling, rotation, and position.  otherwise stop listening\r\n        if (enabled && !this._worldMatrixUpdateObserver) {\r\n            this._worldMatrixUpdateObserver = this.onAfterWorldMatrixUpdateObservable.add(() => {\r\n                this._requiresUpdate = true;\r\n            });\r\n        } else if (!enabled) {\r\n            this._worldMatrixUpdateObserver?.remove();\r\n            this._worldMatrixUpdateObserver = null;\r\n        }\r\n\r\n        // If enabled, then revert the content element display\r\n        // otherwise hide it\r\n        this._element.style.display = enabled ? \"\" : \"none\";\r\n        // Capture the content z index\r\n        this._setElementzIndex(this.position.z * -10000);\r\n        super.setEnabled(enabled);\r\n    }\r\n\r\n    protected _updateScaleIfNecessary() {\r\n        // If we have setContent before, the content scale is baked into the mesh.  If we don't reset the vertices to\r\n        // the original size, then we will multiply the scale when we bake the scale below.  By applying the inverse, we back out\r\n        // the scaling that has been done so we are starting from the same point.\r\n        // First reset the scale to 1\r\n        this.scaling.setAll(1);\r\n        // Then back out the original vertices changes to match the content scale\r\n        if (this._inverseScaleMatrix) {\r\n            this.bakeTransformIntoVertices(this._inverseScaleMatrix);\r\n            // Clear out the matrix so it doesn't get applied again unless we scale\r\n            this._inverseScaleMatrix = null;\r\n        }\r\n\r\n        // Set scale to match content.  Note we can't just scale the mesh, because that will scale the content as well\r\n        // What we need to do is compute a scale matrix and then bake that into the mesh vertices.  This will leave the\r\n        // mesh scale at 1, so our content will stay it's original width and height until we scale the mesh.\r\n        const scaleX = this._width || 1;\r\n        const scaleY = this._height || 1;\r\n        const scaleMatrix = Matrix.Scaling(scaleX, scaleY, 1);\r\n        this.bakeTransformIntoVertices(scaleMatrix);\r\n\r\n        // Get an inverse of the scale matrix that we can use to back out the scale changes we have made so\r\n        // we don't multiply the scale.\r\n        this._inverseScaleMatrix = new Matrix();\r\n        scaleMatrix.invertToRef(this._inverseScaleMatrix);\r\n    }\r\n\r\n    protected _createMask() {\r\n        const vertexData = CreatePlaneVertexData({ width: 1, height: 1 });\r\n        vertexData.applyToMesh(this);\r\n\r\n        const scene = this.getScene();\r\n        this.checkCollisions = true;\r\n\r\n        const depthMask = new StandardMaterial(`${this.id}-mat`, scene);\r\n        if (!this._isCanvasOverlay) {\r\n            depthMask.backFaceCulling = false;\r\n            depthMask.disableColorWrite = true;\r\n            depthMask.disableLighting = true;\r\n        }\r\n\r\n        this.material = depthMask;\r\n\r\n        // Optimization - Freeze material since it never needs to change\r\n        this.material.freeze();\r\n    }\r\n\r\n    protected _setElementzIndex(zIndex: number) {\r\n        if (this._element) {\r\n            this._element.style.zIndex = `${zIndex}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback used by the PointerEventsCaptureBehavior to capture pointer events\r\n     */\r\n    capturePointerEvents() {\r\n        if (!this._element) {\r\n            return;\r\n        }\r\n\r\n        // Enable dom content to capture pointer events\r\n        this._element.style.pointerEvents = \"auto\";\r\n\r\n        // Supress events outside of the dom content\r\n        document.getElementsByTagName(\"body\")[0].style.pointerEvents = \"none\";\r\n    }\r\n\r\n    /**\r\n     * Callback used by the PointerEventsCaptureBehavior to release pointer events\r\n     */\r\n    releasePointerEvents() {\r\n        if (!this._element) {\r\n            return;\r\n        }\r\n\r\n        // Enable pointer events on canvas\r\n        document.getElementsByTagName(\"body\")[0].style.pointerEvents = \"auto\";\r\n\r\n        // Disable pointer events on dom content\r\n        this._element.style.pointerEvents = \"none\";\r\n    }\r\n\r\n    protected _createElement() {\r\n        // Requires a browser to work.  Bail if we aren't running in a browser\r\n        if (typeof document === \"undefined\") {\r\n            return;\r\n        }\r\n        const div = document.createElement(\"div\");\r\n        div.id = this.id;\r\n        div.style.backgroundColor = this._isCanvasOverlay ? \"transparent\" : \"#000\";\r\n        div.style.zIndex = \"1\";\r\n        div.style.position = \"absolute\";\r\n        div.style.pointerEvents = \"none\";\r\n        div.style.backfaceVisibility = \"hidden\";\r\n\r\n        return div;\r\n    }\r\n}\r\n","/* eslint-disable jsdoc/require-jsdoc */\r\n\r\nimport type { IVector2Like } from \"core/Maths\";\r\n\r\n/** @internal */\r\nexport type ParagraphOptions = {\r\n    maxWidth: number;\r\n    lineHeight: number;\r\n    letterSpacing: number;\r\n    tabSize: number;\r\n    whiteSpace: /* 'normal' | 'nowrap' | 'pre' | 'pre-wrap' | */ \"pre-line\" /* | 'break-spaces'*/;\r\n    textAlign: \"left\" | \"right\" | \"center\" /* | 'justify'*/;\r\n    translate: IVector2Like | undefined;\r\n};\r\n\r\n/** @internal */\r\nexport const DefaultParagraphOptions: ParagraphOptions = {\r\n    maxWidth: Infinity,\r\n    lineHeight: 1,\r\n    letterSpacing: 1,\r\n    tabSize: 4,\r\n    whiteSpace: \"pre-line\",\r\n    textAlign: \"center\",\r\n    translate: { x: -0.5, y: -0.5 },\r\n};\r\n","/* eslint-disable babylonjs/available */\r\n/* eslint-disable jsdoc/require-jsdoc */\r\nimport type { FontAsset } from \"../fontAsset\";\r\nimport { DefaultParagraphOptions, type ParagraphOptions } from \"../paragraphOptions\";\r\nimport type { BMFontChar } from \"./bmFont\";\r\nimport type { SdfGlyph } from \"./glyph\";\r\nimport type { SdfTextLine } from \"./line\";\r\n\r\n/** @internal */\r\nexport class SdfTextParagraph {\r\n    public readonly options: ParagraphOptions;\r\n\r\n    get lineHeight() {\r\n        return this.fontAsset._font.common.lineHeight * this.options.lineHeight;\r\n    }\r\n\r\n    readonly paragraph;\r\n    readonly lines;\r\n    readonly width;\r\n    readonly height;\r\n    readonly glyphs;\r\n\r\n    constructor(\r\n        public readonly text: string,\r\n        public readonly fontAsset: FontAsset,\r\n        options?: Partial<ParagraphOptions>\r\n    ) {\r\n        this.options = { ...DefaultParagraphOptions, ...options };\r\n\r\n        const { paragraph, lines, glyphs, width, height } = this._computeMetrics(text);\r\n\r\n        this.paragraph = paragraph;\r\n        this.lines = lines;\r\n        this.glyphs = glyphs;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    private _computeMetrics(text: string) {\r\n        const collapsed = this._collapse(text);\r\n        const breaked = this._breakLines(collapsed);\r\n        const trimmed = breaked.map((line) => line.trim());\r\n\r\n        const lines: SdfTextLine[] = [];\r\n        for (const line of trimmed) {\r\n            lines.push(...this._wrap(line, lines.length));\r\n        }\r\n\r\n        const width = Math.max(...lines.map((line) => line.width));\r\n        const height = this.lineHeight * lines.length;\r\n\r\n        if (this.options.textAlign !== \"left\" || this.options.translate) {\r\n            lines.forEach((line) => {\r\n                const anchor = (() => {\r\n                    switch (this.options.textAlign) {\r\n                        case \"right\":\r\n                            return width - line.width;\r\n                        case \"center\":\r\n                            return (width - line.width) / 2;\r\n                        case \"left\":\r\n                        default:\r\n                            return 0;\r\n                    }\r\n                })();\r\n\r\n                const x = this.options.translate ? this.options.translate.x * width : 0;\r\n                const y = this.options.translate ? this.options.translate.y * height : 0;\r\n                for (const glyph of line.glyphs) {\r\n                    glyph.x += anchor;\r\n                    glyph.x += x;\r\n                    glyph.y += y;\r\n                }\r\n            });\r\n        }\r\n\r\n        const glyphs = lines.flatMap((line) => line.glyphs);\r\n\r\n        return {\r\n            paragraph: trimmed.join(\"\\n\"),\r\n            lines,\r\n            glyphs,\r\n            width,\r\n            height,\r\n        };\r\n    }\r\n\r\n    private _breakLines(text: string) {\r\n        return text.split(\"\\n\");\r\n    }\r\n\r\n    private _collapse(text: string) {\r\n        return text.replace(/\\t/g, \" \".repeat(this.options.tabSize)).replace(/ +/g, \" \");\r\n    }\r\n\r\n    private _wrap(text: string, lineOffset = 0) {\r\n        const lines = new Array<SdfTextLine>();\r\n\r\n        let currentLine = lineOffset;\r\n        let currentGlyphs = new Array<SdfGlyph>();\r\n        let currentCursor = 0;\r\n        let currentWidth = 0;\r\n        let lastChar: BMFontChar | undefined;\r\n        let start = 0;\r\n        let end = start;\r\n\r\n        const pushCurrentLine = () => {\r\n            lines.push({\r\n                text: text.slice(start, end),\r\n                glyphs: currentGlyphs,\r\n                start: start,\r\n                end: end,\r\n                width: currentWidth,\r\n            });\r\n        };\r\n\r\n        while (end < text.length) {\r\n            const i = end;\r\n            const charCode = text.charCodeAt(i);\r\n            const char = this.fontAsset._getChar(charCode);\r\n            const charWidth = char.width;\r\n            const kerning = lastChar ? this.fontAsset._getKerning(lastChar.id, char.id) : 0;\r\n\r\n            currentCursor += kerning;\r\n            const newWidth = currentCursor + charWidth;\r\n            const cursorProgress = char.xadvance + this.options.letterSpacing;\r\n            const nextPosition = currentCursor + cursorProgress;\r\n\r\n            const shouldBreak = nextPosition > this.options.maxWidth || newWidth > this.options.maxWidth;\r\n\r\n            if (shouldBreak) {\r\n                pushCurrentLine();\r\n\r\n                currentLine++;\r\n                lastChar = undefined;\r\n                currentCursor = 0;\r\n                currentWidth = 0;\r\n                start = end;\r\n                end = start + 1;\r\n                currentGlyphs = [];\r\n            }\r\n\r\n            const x = currentCursor;\r\n            const y = currentLine * this.lineHeight;\r\n\r\n            currentGlyphs.push({\r\n                char,\r\n                line: currentLine,\r\n                position: currentGlyphs.length,\r\n                x: x,\r\n                y: y,\r\n            });\r\n\r\n            if (!shouldBreak) {\r\n                lastChar = char;\r\n                currentCursor = nextPosition;\r\n                currentWidth = newWidth;\r\n                end++;\r\n            } else {\r\n                currentCursor = cursorProgress;\r\n            }\r\n        }\r\n\r\n        if (currentGlyphs.length > 0) {\r\n            if (lastChar) {\r\n                // currentWidth += lastChar.xadvance;\r\n            }\r\n            pushCurrentLine();\r\n        }\r\n\r\n        return lines;\r\n    }\r\n}\r\n","import type { VertexBuffer } from \"core/Buffers/buffer\";\r\nimport { Buffer } from \"core/Buffers/buffer\";\r\nimport type { AbstractEngine } from \"core/Engines/abstractEngine\";\r\nimport { Constants } from \"core/Engines/constants\";\r\nimport type { ThinEngine } from \"core/Engines/thinEngine\";\r\nimport { DrawWrapper } from \"core/Materials/drawWrapper\";\r\nimport { ShaderLanguage } from \"core/Materials/shaderLanguage\";\r\nimport type { IDisposable } from \"core/scene\";\r\nimport type { Nullable } from \"core/types\";\r\nimport { SdfTextParagraph } from \"./sdf/paragraph\";\r\nimport type { FontAsset } from \"./fontAsset\";\r\nimport type { ParagraphOptions } from \"./paragraphOptions\";\r\nimport { ThinMatrix } from \"core/Maths/ThinMaths/thinMath.matrix\";\r\nimport {\r\n    CopyMatrixToArray,\r\n    CopyMatrixToRef,\r\n    IdentityMatrixToRef,\r\n    MultiplyMatricesToRef,\r\n    ScalingMatrixToRef,\r\n    TranslationMatrixToRef,\r\n} from \"core/Maths/ThinMaths/thinMath.matrix.functions\";\r\nimport type { IColor4Like, IMatrixLike } from \"core/Maths/math.like\";\r\n\r\n/**\r\n * Abstract Node class from Babylon.js\r\n */\r\nexport interface INodeLike {\r\n    getWorldMatrix(): IMatrixLike;\r\n}\r\n\r\n/**\r\n * Class used to render text using MSDF (Multi-channel Signed Distance Field) technique\r\n * Thanks a lot to the work of Bhushan_Wagh and zb_sj for their amazing work on MSDF for Babylon.js\r\n * #6RLCWP#16\r\n * Star wars scroller: #6RLCWP#29\r\n * With metrics: #6RLCWP#35\r\n * Thickness: #IABMEZ#3\r\n * Solar system: #9YCDYC#9\r\n * Stroke: #6RLCWP#37\r\n */\r\nexport class TextRenderer implements IDisposable {\r\n    private readonly _useVAO: boolean = false;\r\n    private _engine: AbstractEngine;\r\n    private _shaderLanguage: ShaderLanguage;\r\n    private _vertexBuffers: { [key: string]: VertexBuffer } = {};\r\n    private _spriteBuffer: Nullable<Buffer>;\r\n    private _worldBuffer: Nullable<Buffer>;\r\n    private _uvBuffer: Nullable<Buffer>;\r\n    private _drawWrapperBase: DrawWrapper;\r\n    private _vertexArrayObject: WebGLVertexArrayObject;\r\n    private _font: FontAsset;\r\n    private _charMatrices = new Array<number>();\r\n    private _charUvs = new Array<number>();\r\n    private _isDirty = true;\r\n    private _baseLine = 0;\r\n\r\n    // Cache\r\n    private _scalingMatrix = new ThinMatrix();\r\n    private _fontScaleMatrix = new ThinMatrix();\r\n    private _offsetMatrix = new ThinMatrix();\r\n    private _translationMatrix = new ThinMatrix();\r\n    private _baseMatrix = new ThinMatrix();\r\n    private _scaledMatrix = new ThinMatrix();\r\n    private _localMatrix = new ThinMatrix();\r\n    private _finalMatrix = new ThinMatrix();\r\n    private _lineMatrix = new ThinMatrix();\r\n    private _parentWorldMatrix = new ThinMatrix();\r\n\r\n    /**\r\n     * Gets or sets the color of the text\r\n     */\r\n    public color: IColor4Like = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\r\n\r\n    /**\r\n     * Gets or sets the color of the stroke around the text\r\n     */\r\n    public strokeColor: IColor4Like = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\r\n\r\n    /**\r\n     * Gets or sets the width of the stroke around the text (inset)\r\n     */\r\n    public strokeInsetWidth = 0;\r\n\r\n    /**\r\n     * Gets or sets the width of the stroke around the text (outset)\r\n     */\r\n    public strokeOutsetWidth = 0;\r\n\r\n    /**\r\n     * Gets or sets the thickness of the text (0 means as defined in the font)\r\n     * Value must be between -0.5 and 0.5\r\n     */\r\n    public thicknessControl = 0;\r\n\r\n    private _parent: Nullable<INodeLike> = null;\r\n\r\n    /**\r\n     * Gets or sets the parent of the text renderer\r\n     */\r\n    public get parent(): Nullable<INodeLike> {\r\n        return this._parent;\r\n    }\r\n\r\n    public set parent(value: Nullable<INodeLike>) {\r\n        this._parent = value;\r\n    }\r\n\r\n    private _transformMatrix: IMatrixLike = new ThinMatrix();\r\n\r\n    /**\r\n     * Gets or sets the transform matrix of the text renderer\r\n     * It will be applied in that order:\r\n     * parent x transform x paragraph world\r\n     */\r\n    public get transformMatrix(): IMatrixLike {\r\n        return this._transformMatrix;\r\n    }\r\n\r\n    public set transformMatrix(value: IMatrixLike) {\r\n        this._transformMatrix = value;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets if the text is billboarded\r\n     */\r\n    public isBillboard = false;\r\n\r\n    /**\r\n     * Gets or sets if the text is screen projected\r\n     * This will work only if the text is billboarded\r\n     */\r\n    public isBillboardScreenProjected = false;\r\n\r\n    /**\r\n     * Gets the number of characters in the text renderer\r\n     */\r\n    public get characterCount(): number {\r\n        return this._charMatrices.length / 16;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets if the text renderer should ignore the depth buffer\r\n     * Default is false\r\n     */\r\n    public ignoreDepthBuffer = false;\r\n\r\n    private constructor(engine: AbstractEngine, shaderLanguage: ShaderLanguage = ShaderLanguage.GLSL, font: FontAsset) {\r\n        this._engine = engine;\r\n        this._shaderLanguage = shaderLanguage;\r\n        this._font = font;\r\n        this._baseLine = font._font.common.lineHeight * font.scale;\r\n\r\n        this._useVAO = engine.getCaps().vertexArrayObject && !engine.disableVertexArrayObjects;\r\n\r\n        // Main vertex buffer\r\n        const spriteData = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\r\n        this._spriteBuffer = new Buffer(engine, spriteData, false, 2);\r\n        this._vertexBuffers[\"offsets\"] = this._spriteBuffer.createVertexBuffer(\"offsets\", 0, 2);\r\n\r\n        // Instances\r\n        this._resizeBuffers(128);\r\n    }\r\n\r\n    private _resizeBuffers(capacity: number) {\r\n        if (this._worldBuffer) {\r\n            this._worldBuffer.dispose();\r\n            this._worldBuffer = null;\r\n        }\r\n\r\n        if (this._uvBuffer) {\r\n            this._uvBuffer.dispose();\r\n            this._uvBuffer = null;\r\n        }\r\n\r\n        this._worldBuffer = new Buffer(this._engine, new Float32Array(capacity * 16), true, 16);\r\n        this._vertexBuffers[\"world0\"] = this._worldBuffer.createVertexBuffer(\"world0\", 0, 4, 16, true);\r\n        this._vertexBuffers[\"world1\"] = this._worldBuffer.createVertexBuffer(\"world1\", 4, 4, 16, true);\r\n        this._vertexBuffers[\"world2\"] = this._worldBuffer.createVertexBuffer(\"world2\", 8, 4, 16, true);\r\n        this._vertexBuffers[\"world3\"] = this._worldBuffer.createVertexBuffer(\"world3\", 12, 4, 16, true);\r\n\r\n        this._uvBuffer = new Buffer(this._engine, new Float32Array(capacity * 4), true, 4);\r\n        this._vertexBuffers[\"uvs\"] = this._uvBuffer.createVertexBuffer(\"uvs\", 0, 4, 4, true);\r\n    }\r\n\r\n    private _setShaders(vertex: string, fragment: string) {\r\n        this._drawWrapperBase?.dispose();\r\n\r\n        this._drawWrapperBase = new DrawWrapper(this._engine);\r\n\r\n        if (this._drawWrapperBase.drawContext) {\r\n            this._drawWrapperBase.drawContext.useInstancing = true;\r\n        }\r\n\r\n        const defines = \"\";\r\n\r\n        this._drawWrapperBase.effect = this._engine.createEffect(\r\n            {\r\n                vertexSource: vertex,\r\n                fragmentSource: fragment,\r\n            },\r\n            [\"offsets\", \"world0\", \"world1\", \"world2\", \"world3\", \"uvs\"],\r\n            [\"parentWorld\", \"view\", \"projection\", \"uColor\", \"thickness\", \"uStrokeColor\", \"uStrokeInsetWidth\", \"uStrokeOutsetWidth\", \"mode\", \"transform\"],\r\n            [\"fontAtlas\"],\r\n            defines,\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            undefined,\r\n            this._shaderLanguage\r\n        );\r\n\r\n        this._drawWrapperBase.effect._refCount++;\r\n    }\r\n\r\n    /**\r\n     * Add a paragraph of text to the renderer\r\n     * @param text define the text to add\r\n     * @param options define the options to use for the paragraph (optional)\r\n     * @param worldMatrix define the world matrix to use for the paragraph (optional)\r\n     */\r\n    public addParagraph(text: string, options?: Partial<ParagraphOptions>, worldMatrix?: IMatrixLike) {\r\n        const paragraph = new SdfTextParagraph(text, this._font, options);\r\n\r\n        const fontScale = this._font.scale;\r\n\r\n        const texWidth = this._font._font.common.scaleW;\r\n        const texHeight = this._font._font.common.scaleH;\r\n        const glyphs = paragraph.glyphs.filter((g) => g.char.page >= 0);\r\n\r\n        let worldMatrixToUse = worldMatrix;\r\n\r\n        if (!worldMatrixToUse) {\r\n            const lineHeight = paragraph.lineHeight * fontScale;\r\n            const lineOffset = (paragraph.lines.length * lineHeight) / 2;\r\n            TranslationMatrixToRef(0, this._baseLine - lineOffset, 0, this._lineMatrix);\r\n            worldMatrixToUse = this._lineMatrix;\r\n        }\r\n\r\n        ScalingMatrixToRef(fontScale, fontScale, 1.0, this._fontScaleMatrix);\r\n        TranslationMatrixToRef(0.5, -0.5, 0, this._offsetMatrix);\r\n\r\n        const charsUvsBase = this._charUvs.length;\r\n        const matricesBase = this._charMatrices.length;\r\n        glyphs.forEach((g, i) => {\r\n            this._charUvs[charsUvsBase + i * 4 + 0] = g.char.x / texWidth;\r\n            this._charUvs[charsUvsBase + i * 4 + 1] = g.char.y / texHeight;\r\n            this._charUvs[charsUvsBase + i * 4 + 2] = g.char.width / texWidth;\r\n            this._charUvs[charsUvsBase + i * 4 + 3] = g.char.height / texHeight;\r\n\r\n            const x = g.x + g.char.xoffset;\r\n            const y = 1.0 - (g.y + g.char.yoffset);\r\n\r\n            ScalingMatrixToRef(g.char.width, g.char.height, 1.0, this._scalingMatrix);\r\n            MultiplyMatricesToRef(this._offsetMatrix, this._scalingMatrix, this._baseMatrix);\r\n\r\n            TranslationMatrixToRef(x * fontScale, y * fontScale, 0.0, this._translationMatrix);\r\n            MultiplyMatricesToRef(this._baseMatrix, this._fontScaleMatrix, this._scaledMatrix);\r\n            MultiplyMatricesToRef(this._scaledMatrix, this._translationMatrix, this._localMatrix);\r\n\r\n            MultiplyMatricesToRef(this._localMatrix, worldMatrixToUse, this._finalMatrix);\r\n            CopyMatrixToArray(this._finalMatrix, this._charMatrices, matricesBase + i * 16);\r\n        });\r\n\r\n        this._isDirty = true;\r\n\r\n        this._baseLine -= paragraph.lineHeight * fontScale * paragraph.lines.length;\r\n    }\r\n\r\n    /**\r\n     * Render the text using the provided view and projection matrices\r\n     * @param viewMatrix define the view matrix to use\r\n     * @param projectionMatrix define the projection matrix to use\r\n     */\r\n    public render(viewMatrix: IMatrixLike, projectionMatrix: IMatrixLike): void {\r\n        const drawWrapper = this._drawWrapperBase;\r\n\r\n        const effect = drawWrapper.effect!;\r\n\r\n        // Check\r\n        if (!effect.isReady()) {\r\n            return;\r\n        }\r\n        const engine = this._engine;\r\n\r\n        engine.setState(false);\r\n        engine.enableEffect(drawWrapper);\r\n\r\n        if (this.ignoreDepthBuffer) {\r\n            engine.setDepthBuffer(false);\r\n        }\r\n\r\n        if (this._parent) {\r\n            CopyMatrixToRef(this._parent.getWorldMatrix(), this._parentWorldMatrix);\r\n        } else {\r\n            IdentityMatrixToRef(this._parentWorldMatrix);\r\n        }\r\n\r\n        effect.setInt(\"mode\", this.isBillboard ? (this.isBillboardScreenProjected ? 2 : 1) : 0);\r\n        effect.setMatrix(\"parentWorld\", this._parentWorldMatrix);\r\n        effect.setMatrix(\"view\", viewMatrix);\r\n        effect.setMatrix(\"projection\", projectionMatrix);\r\n        effect.setMatrix(\"transform\", this.transformMatrix);\r\n\r\n        // Texture\r\n        effect.setTexture(\"fontAtlas\", this._font.textures[0]);\r\n        effect.setDirectColor4(\"uColor\", this.color);\r\n        effect.setDirectColor4(\"uStrokeColor\", this.strokeColor);\r\n        effect.setFloat(\"thickness\", this.thicknessControl * 0.9);\r\n        effect.setFloat(\"uStrokeInsetWidth\", this.strokeInsetWidth);\r\n        effect.setFloat(\"uStrokeOutsetWidth\", this.strokeOutsetWidth);\r\n\r\n        const instanceCount = this._charMatrices.length / 16;\r\n\r\n        // Need update?\r\n        if (this._isDirty) {\r\n            this._isDirty = false;\r\n\r\n            if (this._worldBuffer!.getBuffer()!.capacity / 4 < instanceCount * 16) {\r\n                this._resizeBuffers(instanceCount);\r\n            }\r\n\r\n            this._worldBuffer!.update(this._charMatrices);\r\n            this._uvBuffer!.update(this._charUvs);\r\n        }\r\n\r\n        if (this._useVAO) {\r\n            if (!this._vertexArrayObject) {\r\n                this._vertexArrayObject = (engine as ThinEngine).recordVertexArrayObject(this._vertexBuffers, null, effect);\r\n            }\r\n            (engine as ThinEngine).bindVertexArrayObject(this._vertexArrayObject, null);\r\n        } else {\r\n            // VBOs\r\n            engine.bindBuffers(this._vertexBuffers, null, effect);\r\n        }\r\n\r\n        engine.setAlphaMode(Constants.ALPHA_COMBINE);\r\n        engine.drawArraysType(Constants.MATERIAL_TriangleStripDrawMode, 0, 4, instanceCount);\r\n        engine.unbindInstanceAttributes();\r\n        engine.setAlphaMode(Constants.ALPHA_DISABLE);\r\n\r\n        if (this.ignoreDepthBuffer) {\r\n            engine.setDepthBuffer(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Release associated resources\r\n     */\r\n    public dispose(): void {\r\n        if (this._worldBuffer) {\r\n            this._worldBuffer.dispose();\r\n            this._worldBuffer = null;\r\n        }\r\n\r\n        if (this._uvBuffer) {\r\n            this._uvBuffer.dispose();\r\n            this._uvBuffer = null;\r\n        }\r\n\r\n        if (this._spriteBuffer) {\r\n            this._spriteBuffer.dispose();\r\n            this._spriteBuffer = null;\r\n        }\r\n\r\n        if (this._vertexArrayObject) {\r\n            (this._engine as ThinEngine).releaseVertexArrayObject(this._vertexArrayObject);\r\n            (<any>this._vertexArrayObject) = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new TextRenderer instance asynchronously\r\n     * @param font define the font asset to use\r\n     * @param engine define the engine to use\r\n     * @returns a promise that resolves to the created TextRenderer instance\r\n     */\r\n    public static async CreateTextRendererAsync(font: FontAsset, engine: AbstractEngine) {\r\n        if (!engine.getCaps().instancedArrays || !engine._features.supportSpriteInstancing) {\r\n            throw new Error(\"Instanced arrays are required for MSDF text rendering.\");\r\n        }\r\n\r\n        let shaderLanguage = ShaderLanguage.GLSL;\r\n        let vertex: string = \"\";\r\n        let fragment: string = \"\";\r\n        if (engine.isWebGPU) {\r\n            shaderLanguage = ShaderLanguage.WGSL;\r\n            vertex = (await import(\"./shadersWGSL/msdf.vertex\")).msdfVertexShaderWGSL.shader;\r\n            fragment = (await import(\"./shadersWGSL/msdf.fragment\")).msdfPixelShaderWGSL.shader;\r\n        } else {\r\n            vertex = (await import(\"./shaders/msdf.vertex\")).msdfVertexShader.shader;\r\n            fragment = (await import(\"./shaders/msdf.fragment\")).msdfPixelShader.shader;\r\n        }\r\n\r\n        const textRenderer = new TextRenderer(engine, shaderLanguage, font);\r\n        textRenderer._setShaders(vertex, fragment);\r\n\r\n        return textRenderer;\r\n    }\r\n}\r\n","import * as addons from \"addons/index\";\r\n\r\nexport { addons };\r\nexport default addons;\r\n"],"names":["root","factory","exports","module","require","define","amd","self","global","this","__WEBPACK_EXTERNAL_MODULE__597__","name","shader","ShaderStore","ShadersStore","msdfVertexShader","ShadersStoreWGSL","msdfPixelShaderWGSL","msdfPixelShader","msdfVertexShaderWGSL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","BabylonUnitsToPixels","RenderOrderFunc","defaultRenderOrder","subMeshA","subMeshB","meshA","getMesh","meshB","meshIsHtmlMeshA","meshIsHtmlMeshB","absolutePosition","z","scene","parentContainerId","_containerId","enableOverlayRender","defaultOpaqueRenderOrder","RenderingGroup","PainterSortCompare","defaultAlphaTestRenderOrder","defaultTransparentRenderOrder","defaultTransparentSortCompare","_cache","cameraData","fov","position","Vector3","style","htmlMeshData","WeakMap","_width","_height","_heightHalf","_temp","scaleTransform","rotationTransform","Quaternion","positionTransform","objectMatrix","Matrix","Identity","cameraWorldMatrix","cameraRotationMatrix","cameraWorldMatrixAsArray","Array","_lastDevicePixelRatio","window","devicePixelRatio","_cameraMatrixUpdated","_previousCanvasDocumentPosition","top","left","_renderObserver","_onCameraMatrixChanged","camera","_cameraWorldMatrix","getWorldMatrix","document","_init","dispose","remove","_overlayElements","container","_inSceneElements","parentContainer","getElementById","body","inSceneContainerId","_createRenderLayerElements","insertBefore","firstChild","overlayContainerId","zIndex","getEngine","getRenderingCanvas","pointerEvents","_engine","projectionObs","matrixObs","clientRect","getRenderingCanvasClientRect","Error","_setSize","width","height","onResizeObservable","add","observeCamera","activeCamera","onProjectionMatrixChangedObservable","onViewMatrixChangedObservable","onActiveCameraChanged","opaqueRenderOrder","alphaTestRenderOrder","transparentRenderOrder","setRenderingOrder","onBeforeRenderObservable","_render","containerId","existingContainer","createElement","id","domElement","overflow","cameraElement","webkitTransformStyle","transformStyle","appendChild","_getSize","dom","_getCameraCssMatrix","matrix","elements","m","_epsilon","_getHtmlContentCssMatrix","useRightHandedSystem","direction","_getTransformationMatrix","htmlMesh","getScene","objectWorldMatrix","widthScaleFactor","heightScaleFactor","sourceWidth","sourceHeight","scaledAndTranslatedObjectMatrix","decompose","x","y","ComposeToRef","getAbsolutePosition","setRowFromFloats","multiplyAtIndex","_renderHtmlMesh","element","firstElementChild","set","_isCanvasOverlay","parentNode","requiresUpdate","_updateBaseScaleFactor","billboardMode","TransformNode","BILLBOARDMODE_NONE","webkitTransform","transform","_markAsUpdated","needsUpdate","_updateContainerPositionIfNeeded","copyFrom","Logger","Log","meshesNeedingUpdate","meshes","filter","mesh","length","getProjectionMatrix","source","mode","Camera","PERSPECTIVE_CAMERA","el","webkitPerspective","perspective","parent","computeWorldMatrix","cameraMatrixWorld","getRotationMatrix","transposeToRef","cameraMatrixWorldAsArray","copyToArray","FromArrayToRef","screenWidth","screenHeight","htmlMeshAspectRatio","setContentSizePx","canvasRect","scrollTop","scrollY","scrollLeft","scrollX","canvasDocumentTop","canvasDocumentLeft","containerParent","offsetParent","parentRect","getBoundingClientRect","parentDocumentTop","parentDocumentLeft","ancestorMarginsAndPadding","_getAncestorMarginsAndPadding","bodyStyle","getComputedStyle","bodyMarginTop","parseInt","marginTop","bodyMarginLeft","marginLeft","paddingTop","paddingLeft","Warn","Math","abs","documentElement","extendStatics","b","setPrototypeOf","__proto__","p","__assign","assign","t","s","i","arguments","apply","create","SuppressedError","CharCode","CaptureRequestQueue","PendingRequestCallbacks","Map","UnmatchedReleaseRequests","CurrentOwner","requestRelease","requestId","DebugLog","CancelRequest","delete","includes","push","TransferPointerEventsOwnership","removed","newOwnerId","NextCaptureRequest","DoRelease","DoCapture","release","capture","shift","message","Tools","performance","now","LocalScene","CaptureOnEnterCount","MeshToBehaviorMap","StartCaptureOnEnter","addEventListener","OnPointerMove","onDisposeObservable","DoStopCaptureOnEnter","removeEventListener","StopCaptureOnEnter","evt","pickedMesh","touches","clientX","clientY","pointerScreenX","pointerScreenY","pickResult","pick","pointerCaptureBehavior","isEnabled","_captureOnPointerEnter","hit","capturingIdAsInt","uniqueId","capturePointerEvents","_captureCallback","_releaseCallback","captureOnPointerEnter","_attachedMesh","init","attach","attachedMesh","detach","releasePointerEvents","toString","captureCallback","releaseCallback","RemoveUnmatchedRequest","EnqueueCaptureRequest","FitStrategy","CONTAIN","wrapElement","sizingElement","display","justifyContent","alignItems","scalingElement","visibility","updateSize","offsetWidth","offsetHeight","childWidth","childHeight","scale","min","COVER","max","STRETCH","NONE","isCanvasOverlay","fitStrategy","_enabled","_ready","_requiresUpdate","_inverseScaleMatrix","_pointerEventCaptureBehavior","_sourceWidth","_sourceHeight","_fitStrategy","_createMask","_element","_createElement","setEnabled","PointerEventsCaptureBehavior","bind","addBehavior","TypeError","String","__","constructor","setContent","_setAsReady","scaling","setAll","_updateScaleIfNecessary","enabled","_doSetEnabled","ready","_worldMatrixUpdateObserver","onAfterWorldMatrixUpdateObservable","_setElementzIndex","bakeTransformIntoVertices","scaleX","scaleY","scaleMatrix","Scaling","invertToRef","CreatePlaneVertexData","applyToMesh","checkCollisions","depthMask","StandardMaterial","backFaceCulling","disableColorWrite","disableLighting","material","freeze","getElementsByTagName","div","backgroundColor","backfaceVisibility","Mesh","definitionData","textureUrl","_chars","_kernings","_font","JSON","parse","pages","chars","forEach","char","kernings","kerning","submap","first","second","amount","_charsRegex","RegExp","map","c","replace","join","_updateFallbacks","info","size","textures","page","texture","Texture","noMipmap","invertY","anisotropicFilteringLevel","has","SPACE","xoffset","yoffset","xadvance","chnl","index","TOFU","_getChar","charCode","_getKerning","_unsupportedChars","text","DefaultParagraphOptions","maxWidth","Infinity","lineHeight","letterSpacing","tabSize","whiteSpace","textAlign","translate","fontAsset","options","_computeMetrics","paragraph","lines","glyphs","common","collapsed","_collapse","trimmed","_breakLines","line","trim","_wrap","anchor","glyph","flatMap","split","repeat","lineOffset","lastChar","currentLine","currentGlyphs","currentCursor","currentWidth","start","end","pushCurrentLine","slice","charCodeAt","charWidth","newWidth","cursorProgress","nextPosition","shouldBreak","engine","shaderLanguage","font","_useVAO","_vertexBuffers","_charMatrices","_charUvs","_isDirty","_baseLine","_scalingMatrix","ThinMatrix","_fontScaleMatrix","_offsetMatrix","_translationMatrix","_baseMatrix","_scaledMatrix","_localMatrix","_finalMatrix","_lineMatrix","_parentWorldMatrix","color","g","strokeColor","strokeInsetWidth","strokeOutsetWidth","thicknessControl","_parent","_transformMatrix","isBillboard","isBillboardScreenProjected","ignoreDepthBuffer","_shaderLanguage","getCaps","vertexArrayObject","disableVertexArrayObjects","spriteData","Float32Array","_spriteBuffer","Buffer","createVertexBuffer","_resizeBuffers","capacity","_worldBuffer","_uvBuffer","_setShaders","vertex","fragment","_drawWrapperBase","DrawWrapper","drawContext","useInstancing","effect","createEffect","vertexSource","fragmentSource","_refCount","addParagraph","worldMatrix","SdfTextParagraph","fontScale","texWidth","scaleW","texHeight","scaleH","worldMatrixToUse","TranslationMatrixToRef","ScalingMatrixToRef","charsUvsBase","matricesBase","MultiplyMatricesToRef","CopyMatrixToArray","render","viewMatrix","projectionMatrix","drawWrapper","isReady","setState","enableEffect","setDepthBuffer","CopyMatrixToRef","IdentityMatrixToRef","setInt","setMatrix","transformMatrix","setTexture","setDirectColor4","setFloat","instanceCount","getBuffer","update","_vertexArrayObject","recordVertexArrayObject","bindVertexArrayObject","bindBuffers","setAlphaMode","Constants","ALPHA_COMBINE","drawArraysType","MATERIAL_TriangleStripDrawMode","unbindInstanceAttributes","ALPHA_DISABLE","releaseVertexArrayObject","CreateTextRendererAsync","thisArg","_arguments","generator","f","_","label","sent","trys","ops","Iterator","next","verb","iterator","v","op","done","pop","e","step","instancedArrays","_features","supportSpriteInstancing","isWebGPU","textRenderer","TextRenderer","P","Promise","resolve","reject","fulfilled","rejected","result","then"],"sourceRoot":""}